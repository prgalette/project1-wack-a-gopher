%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Cory Thoman) ()%%Title: (plump_beaver_bann.eps)%%CreationDate: 9/6/11 11:14 AM%%Canvassize: 16383%%BoundingBox: -70 93 681 701%%HiResBoundingBox: -69.3052 93.6484 680.4512 700.0679%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 306.5 398.5 306.5 398.5%AI3_TileBox: 18 43 594 777%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 792 618%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -439 818 1 1493 834 18 0 0 55 197 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 104 8%%BeginData: 18588 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD38FFA8525152FD08FF7D4B527DFD6FFF7D2799935153FD06FF7D%4B996F4B7DFD6DFFA84B9951767552FD06FF519975767551A8FD6CFF5275%6F7527754B7DA8A87DA87D516F516F996F52FD6CFF7D6F99999A75762776%5176515275767599997552FD6CFFA8524B756F756F756F9975996F997599%6F5152A8FD6DFFA852FD047D759975997599759951527DFD6EFFA87DA8FD%04FFA852756F996F756E754BA8FD6DFFA87EFFFFAFFFAFFFFFFF52997576%7DA87D7627A8FD6CFF84A8FFA9FFA9AFA9FFAFA84B7DA8FFFFFFA87627A8%FD6BFF7DFFAFFFAFFFAFFFAFFFAF7DFFFFAFFFAFFFFF764BFD6AFFA87DA8%FFA9AFA8FFA8A9A8AF7DFFA8AFA9AFA8FF7C4B52FD69FF5952FFAFFFAFFF%AFAF7DFFA8A8AF7E84FFAFFFAF7D6F7652FD67FF7D4B76A9FFA9AFA9FFA9%AFA9A852AFA9FFA9AFA9FF52756F517DFD65FFA84B995184A9FFAFFFAFFF%AFFF525184FFAFFFAFFF7D76759975527DFD63FFA827756F752784A8AFA9%AFA8AF52516E527DAFA8AF7D516F996F996E51A8FD62FF5275759A99754B%7D84AFA8A85252759A75FD05527599759975997552A8FD60FF527575756F%9975994B524B51F8272727F8274B516F9975996F9975996F994B52FD5FFF%5975759975997599759975762727F852527D522727275199759975997599%7599517DFD5DFF7D516F756F996F756F996F51F82727A8FD04FFA852F827%4B996F756F996F756F994B7DFD5BFFA8527599759A7599759A9976202727%7DFD06FF522720275199759A7599759A75994BA8FD59FFA8526F9975996F%9975996F992727F827F87DA8FFA8A85227F827F82775996F9975996F9975%7527FD59FF7D7599759975997599759975272727F8FD0727F8272727F876%7599759975997599997552FD57FF7D4B996F756F996F756F996F75F827F8%27F827F827F827F827F827F8274B996F756F996F996F996F517DFD56FF4B%997599759A7599759A759975272727202727272027272720272727209A99%99759A759A759975997552A8FD54FF52756F997575277675996F99759927%27F827F827F827F827F827F827F84B6F9975996F99754B4B9975994B7DFD%53FFA8527599759951525199759975999976F8272727F8272727F8272727%F82775997599759975764B76759975994BFD53FF7D4B996F756F996F4B4B%996F756F996F75F827F827F827F827F827F8274B996F756F996F7527756F%756F996F7552FD52FF52997599759A759975527599759A7599759A4B2720%2727272027275275997599759A9976279A9999759A75997576FD51FFA851%6F9975996F9975996F514B996F9975756F9975754B2727514B7575996F99%75996F7627756F9975996F9975994BA8FD50FFA851997599759975997599%75524B7575997599759999994B76999975997599759975524B9999997599%7599759999757DFD50FF7D756F756F996F756F996F996F7527516F996F99%6F996F4B27996F996F996F754B514B996F996F756F996F756F994B7DFD50%FFA84B99759A7599759A7599759A9999515251754B755152525251756F75%515227767599759A7599759A7599759A75757DFD50FF7D516E756F997599%6F9975996F99759951A87D7D597DA87D7DFF7D7D597D7E766E9975996F99%75996F9975996F754BA8FD50FF7D27996F99759975997599759975997576%FD06FF7D7DFD06FF76997599759975997599759975756E5152FD50FF274B%6E756E756F996F756F996F756F9952FD06FF7D7DFD05FFA8766F756F996F%756F996F996F756E75274B7EFD4EFF59754B766F756F997599759A759975%9A7576A8FD05FF7D7DFD06FF5299759A7599759A759975756F754B517552%FD4DFFA8526F7527756E756E756F996F9975996F994B7DFD05FF7D7DFD05%FF527575996F9975996F996F756E756F274A994B7DFD4CFF7D4B996F4B4B%996F756E756F99759975997599517D7DFFA8FF7D7DFFFFA8A85275759975%99759975756E756F756E524B99759952FD4BFFA84B996F996E4B4B756E6F%6E756E6F6E756F756F996F754B524B5127524B524B756F756F756F756E75%6E6F6E756E51266F6F756E517DFD4AFF7D75759A75996E514B756E756F75%6F756F756F756F756F996F756F996F756F996F756F756F756F756F756F99%6F5227757599759A757DFD42FFA87D7D5276527D52526F996F9975754A4B%27516E756E756E756E756E756E756E756E756E756E756E756E756E756E75%6E756E754B4B276F6E9975996F752752527D52527D7E7DFD39FF7D4B7627%756F4B75754B527599759999996E7527514B756F756E756F756E756F756E%756F756E756F756E756F756E756F756F754B4B4A75759975997599277675%75277575274B527DFD38FF4B754B5293754B996F7527516F754B754B754A%4B262727514B514B514B514B514B514B514B514B514B514B514B514B514B%27F8274A4B4B754B754B754B4B6F996F514B994B756E52FD38FF52757651%99517699995152FD067D7EA884A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8%A8FFA8A8A8FFA8A8A8FFFD06A884A8FD067D277699994B769976519952FD%34FF7D7D597D27994B7699754B9975517DFD32FFA84B9975514B994B516F%52527D7DA8A8FD2BFFA8FD047DA8FFA85275764B9975516F754BFD05FFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFFFFFCFFFFF526F9927759952517552FFA8A87D%7D537DA8FD26FF7D7D52A8A8FD05FFA8524B4B4B51525227A8CACFA8CFA8%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8FF7D524B524B51275252A8CFFD05%FF7D7D527DA8FD21FF7D52A8FD06FFCFFFCFFFFFFFA884A8FFA8FFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFA87DCFCFFFCF%FFCFFD07FF7D7D7DFD1EFFA8527DFFFFFFCAFFCACFA8CFCACFA8FFCACFCA%FFCACFCAFFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFCA%FFCFCFCAFFCACFA8FFCACFA8FFCAFD04FF7D52FD1CFFA87DA8FFFFFFCFFF%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCFFF%FFA852FD1BFF7D7DFFCACFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8%CFA8CFA8CFA8CFA8CFA8CFA8CFCAFFFFA852FD1AFF7DFFCFCFA8FFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCAA8A8%FFFF7DFD0DFFFD057D847DFFA8A87DA8527DCAA77DA1A8FFCACFA8FFCACF%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACA7D7D52FF527D%7D7E7DA8A8A87DA87D7D52A8527DA17C7D7C7D527D7C7D7C7C7DFFA1A8CF%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA%FFCFCF7DA8CF7D527D767D525276FD047DA12727CFCACFA7CFCAA8A7CFCA%A7767DCAA87DCFCACFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8%CFA8CFA8CFA8CFA8CFA8A77DFF527DA1CFCACAA7CFCACFA7CFCA527DCACF%A8CFCACFCACFCACFA7A152FFA7A8A8FFCFFFCFFFCFFFCFFFCFFFCFFFCFFF%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFCF7DA8CF7D7DCACACFA8CFCACF%A8CFCACF5252CAA8CAA7CFA8CAA7CFA8A77C7DCAA8A8FFCACFA8FFCACFA8%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCAA87DFF52%7DA1CFA8CAA7CFA8CAA7CFA75252A7CFCACFA8CFCACFA8CFA7A152FFA87D%A8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF%CFFFCFCA7DA8CF7D7DA8A8CFCACFA8CFCACFA8CA5252A8A7CAA7CAA7CAA7%CAA7A77C7CCAA8A7CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8%CFA8CFA8CFA8CFA8CFA8CFA8A8A1CF52A1A1CAA7CAA7CAA7CAA7CAA77D7D%A7CFCACFA8CFCACFA8CFA7A752FFCAA8A8FFCFFFCFFFCFFFCFFFCFFFCFFF%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFCFA1FFCF7D7DCAA8CFCACF%A8CFCACFCACA5252A8A7CFA8CAA7CFA8CAA7CA7D52CAA87DCACAFFCACFA8%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA87DA8%FF52A1A7CAA7CFA8CAA7CFA8CAA17D7DA7CFA8CFCACFA8CFCACFA7A752FF%CFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF%CFFFCAFFCFFFCFFFCF7D7DCACACFA8CFCACFA8CFCAA85252A7A8CAA7CAA7%CAA7CAA7A77C7DA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8%CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF52A1A1CAA7CAA7CAA7CAA7CF7D%7D7DA1CFA8CFCACFA8CFCACFA7A752FFCFFFCFFFCFFFCFFFCFFFCFFFCFFF%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCA527DCACACF%A8CFCACFA8CFCAA77D7DA1CACAA7CFA8CAA7CFA8A87D52A8CFA8FFCACFA8%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA%CFCACF52A1A7CFA8CAA7CFA8CAA7CFFD047DCFCACFA8CFCACFA8CFA7A752%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF%FFCAFFCFFFCAFFCFFFA87DA1CAA8CFCACFA8CFCACFCAA17D7D7DA7CAA7CA%A7CAA7CAA7A87D76A8FFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFCACA52A7A7CAA7CAA7CAA7CAA7CF%767D7E7CCFCACFA8CFCACFA8CFA7A752FFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA852A1CAA8%CFCACFA8CFCACFCAFD047DA8CFA8CAA7CFA8CAA7CAA152A8FFCACFA8FFCA%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8%FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCA%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8%FFCAA852A7A7CAA7CFA8CAA7CFA8CF52A8A87CCFA8CFCACFA8CFCACFA7A7%52CFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF%CAFFCFFFCAFFCFFFCAFFA87CA1CACACFA8CFCACFA8CFCAFD047DCACAA7CA%A7CAA7CAA8A8A176A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFCAA852A7A7CAA7CAA7CAA7CAA7CF%52A8AF52CFCACFCACFA8CFCACFA7CA52CACFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFA852A1CFCA%CFA8CFCACFA8CFCA52A8FF7D27A7A8CFA8CAA7CFA8CAA152A7CFA8FFCACF%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF%CACFCAA852A7A7CFA8CAA7CFA8CA7D4C7DFFFF7D7DA8CFA8CFCACFA8CFA8%A752A8CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA%FFCFFFCAFFCFFFCAFFCFFFA77DA7CAA8CFCACFA8CFCACA5284FFFF7DA1CF%A7CAA7CAA7CAA7CAA1767DFFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFCAA852A7A7CAA7CAA7CAA7CA%A8A752FFFF59CACACFA8CFCACFA8CFA8CA52A8CFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF7D7DA7%CAA8CFCACFA8CFCACF7D7DFFFF7DA1CFA8CAA7CFA8CAA7CAA7527DFFCACF%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF%CACFA8FFCAA152A7A7CAA7CFA8CAA7CFA8A152FFFF53A8A8CFCACFA8CFCA%CFA7CA52A8CFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA%FFCFFFCAFFCFFFCAFFCFFFCAFF7D7DA7CFCACFA8CFCACFA8CFA17DFFFF52%A7CAA7CAA7CAA7CAA7CAA17D7DCFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFCA7D52A7A7CAA7CAA7CA%A7CAA7A752FFFF52A8CACFCACFA8CFCACFA8CA76A8CFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF7D%7DA7CFCACFA8CFCACFA8CFA17DFFFF53A7CAA7CFA8CAA7CFA8CAA17C7DCF%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF%CACFA8FFCACFCA7D52A7A7CFA8CAA7CFA8CAA8A752FFFF52CACACFA8CFCA%CFA8CFA8CA527DCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFF7D7DA7CFA8CFCACFA8CFCACF7D7DFF%FF7DA1CAA7CAA7CAA7CAA7CAA17D7DFFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFCA7D52A7A7CAA7CA%A7CAA7CAA8A152FFFF52CACACFA8CFCACFA8CFCACA767DCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FF7D7DA7CFA8CFCACFA8CFCACF7D7DFFA952A7CFA8CAA7CFA8CAA7CFA77C%52FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF%CACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FF%CACFA8FFCACFA8FFCA7D76CAA8CAA7CFA8CAA7CFA8A152FFFF52CAA8CFCA%CFA8CFCACFA8CA7C7DCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF7D7DA7CFCACFA8CFCACFA8CFA7%7DFFA87DA7CAA7CAA7CAA7CAA7CAA17D7CCFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFA8CFCA7D76A7A7CA%A7CAA7CAA7CAA7A852FFFF52CFA8CFCACFA8CFCACFA8CA7D7DCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF%FFCFFF527DA7CFCACFA8CFCACFA8CFA77DFFA852A7CAA7CFA8CAA7CFA8CA%A77D52CFA8FFCACFA8FFCACFCAFFCACFCAFFCFCFA8FFCACFCAFFCACFA8FF%CACFA8FFCACFA8FFCACFCAFFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACF%A8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACFCAFF%CACFA8FFCACFA8FFCACFCA7D7CA7A7CFA8CAA7CFA8CAA7A852FFFF52CFCA%CFA8CFCACFA8CFCACA7D7DCFFFCAFFCFFFCFFFCFCFA8CAA8A87DA8CFFFCA%FFCFCA52FFCFFFCFFFCFFFCFFFCFFFCFFFA7CFCFFFCFFFCFFFCFFFCFFFCF%FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCA%FFCFFFA77D7DA8A7CFCAFFCFFFCFFFCAFFCFFF52A1A7CFA8CFCACFA8CFCA%CFA77DFFA876A7CAA7CAA7CAA7CAA7CAA77D52FFCACFA8FFA8A8FD057DA7%7DA8A8FFCACFA8CF525352A8A7A77DA77D7D7DA77D7D5252527D7C7D7D7D%767D7D7D767D7D7D767D7D7D767D7D7D767D7D7D76A1FD057DA77DFD05A8%52527DFFCAA87DA77D7D527D527D7DA8CACFA8FFCA527CA8A8CAA7CAA7CA%A7CAA7A852FFA852CFCACFA8CFCACFA8CFCACA7D7DCFFFCFCF7D7D7DCFCA%FFCFFFCACA7DA87D7D527D52A8FFA8537D53FD047DA87DA87DA8FFFF7D84%7D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87D7E7DA87DA8FD087D52%7D52A8A87D7C7D7DA8A8FFCFFFCFCFA1A1527DA8FFCFFF52A7A7CFA8CFCA%CFA8CFCACFA77DFF847DA8A8A7CAA7CFA8CAA7CFA7A152FFCACFA8CFCACF%A8A87D7D527D527D7DA87DA8A8FD37FFA8FD04FFA8FD047D5252527D7DCF%CAFFA8CFA8FFA8527DCAA8CAA7CFA8CAA7CAA7A852FFA87DCA52A8CACFA8%CFCACFA8CAA152A8FFCFFFA87D525227A8A8FD4CFFA97D5252527DCACFFF%CAFF52A7A7CFCACFA8CFCACF7D7DA77DA87D7DCACFA7CAA7CAA7CAA7CAA1%A752A1CAA8FD05527CFD50FF527D5252527DA8CF7D52A1A8A7CAA7CAA7CA%A7CFCACF52A8A87DCFA1A7A8CFA8CFCACFA8CFA7A7527D277DA7A8527D52%FD50FF7D5252A1CA52527D52A1A7A7CFCACFA8CFCAA87CA8CF7DA859A1CA%A8A1CAA8CAA7CFA8CAA7A7A1A1FD06527652A8FD4FFF527DFD06527DA7A1%CAA7CFA8CAA7CFA7A7A7CF7C7E7DA1CA527D52A8CACFA8CFCACFA7CAA7A7%A1A77D7D52A152FD4FFFAF527C767CA7A1CAA7A7A7CFCACFA8CFCACFA1A7%7DA1A7A17D52A8A7A8A7CAA7CFA8CAA7CAA7CAA7CAA7A7A1A7A7A12752A8%FD4FFF51527CA7A1A7A1CAA7CAA7CAA7CAA7CAA8CAA7CAA7CA7D7D52CAFF%CA7D7DA8A7CAA7CFA8CFCACFA8CFA7CAA17DA17D27FD50FF2752CAA1A1A1%CAA8CAA8CFCACFA8CFA8CAA7A87D7DA8CF5252527CA87DA17D7D7C7D7C7D%7C7D767D7D7D7C7D7DA1527DFD50FF5276A1A87D7D7C7D7D7D767D7C7D7C%7D7C7D7D7D7C7D527DFFA87D527D7C7D7DA77DA77DA77DA1FD047D7C7D52%7DFD52FF7D7D52FD047DA17DA77DA77DA17DA17D7D527D7DA8FD05FFA8A8%7D7D537D525352FD067DA8A8FD55FFA8A87DA87D7D537D527D52FD047DA8%A8FD04FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp12 Bn%AI5_BeginGradient: (Copper Radial)(Copper Radial) 1 4 Bd[0<0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B2C2D2D2E2F2F303131323333343536><242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263><0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B>1 %_Br<00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F10111112121313141515161617181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959><3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5><636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5><2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030303030303031313131313131313232323232323232323333333333333333343434343434343435353535353535353536363636363636363737373737373737383838383838383839393939393939393A3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D>1 %_Br<595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E><B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECFCFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9EAEB><F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1E1E0><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F>1 %_Br[0 0.04 0.14 0 1 51.0204 0.395812 %_BS%_0 0.04 0.14 0 1 51.0204 0.395812 Bs0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs0.35 0.71 0.96 0.24 1 50 78.0899 %_BS%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs0.43 0.92 0.88 0.56 1 50 100 %_BS%_0.43 0.92 0.88 0.56 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Desert Sunset)(Desert Sunset) 0 6 Bd[<38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F7F7F80808080818181818282828282><5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5><2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F>01 %_Br<1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738><4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657><5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E>01 %_Br<050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D1E1E1F><2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F3F40><7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554535252>01 %_Br<0000000000000000000101010101010101010101010101010101020202020202020202020202020202020303030303030303030303030303030304040404040404040404040404040405050505050505050505><7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B><9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C7B7B7A><0303020202020202020202020202020202020202020202020202020202020202020202020101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000>1 %_Br<05050505050505050404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A><DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E><2928282726262524242322222121201F1F1E1D1D1C1B1B1A191918181716161514141312121111100F0F0E0D0D0C0B0B0A0A0908080706060504040303>1 %_Br[0.51 0.71 0.31 0 1 50 100 %_BS%_0.51 0.71 0.31 0 1 50 100 Bs0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs0.12 0.25 0.32 0 1 50 53.6679 %_BS%_0.12 0.25 0.32 0 1 50 53.6679 Bs0.02 0.17 0.48 0 1 48 38.764 %_BS%_0.02 0.17 0.48 0 1 48 38.764 Bs0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs0.02 0.57 0.86 0.16 1 50 0 %_BS%_0.02 0.57 0.86 0.16 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Fade to Black)(Fade to Black) 0 2 Bd[00 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 1 1 50 0 %_BS%_0 0 0 1 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient)(Linear Gradient) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 0 1 50 0 %_BS%_0 0 0 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient)(Radial Gradient) 1 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 0 1 50 0 %_BS%_0 0 0 0 1 50 0 Bs0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Soft Black Vignette)(Soft Black Vignette) 1 3 Bd[0.20.20.211 %_Br0.20.20.211 %_Br[0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs0.2 0.2 0.2 1 1 50 100 %_BS%_0.2 0.2 0.2 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 17)(Unnamed gradient 17) 0 6 Bd[<FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A29292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292928282828282828282828282828><2B2B2B2B2A2A2A2A2A2A29292929292928282828282727272727272626262626262525252525252424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717171716161616161615151515151514141414141313131313131212121212121111111111111010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090909080808080808070707070707060606060606050505050505040404040404030303030303020202020202010101010101000000>1 %_Br<C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A39393939393939393939393939393938383838383838383838383838383737373737373737373737373737373636363636363636363636363636363535353535353535353535353535343434343434343434343434343434333333333333333333333333333333323232323232323232323232323231313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E><0001010101010202020203030303030404040405050505050606060606070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F101010101011111111121212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202020212121212222222222232323232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B>1 %_Br<DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3><3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B><1A1A1A1A1A1A191919191919191918181818181818171717171717171716161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090808080808080807070707070707070606060606060605050505050505050404040404040403030303030303030202020202020202010101010101010000>1 %_Br<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA><000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F10101011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F30303031313132323232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E><EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><0000000001010101010101010202020202020203030303030303030404040404040405050505050505050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F1010101010101011111111111111111212121212121213131313131313131414141414141415151515151515151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A>1 %_Br<0000000000000001010101010101010101010102020202020202020202020202030303030303030303030303040404040404040404040404040505050505050505050505050606060606060606060606060607070707070707070707070707080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313131313131314141414141414141414><FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDED><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br[0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs0.997467 1 0.178775 0.168856 1 50 80 %_BS%_0.997467 1 0.178775 0.168856 1 50 80 Bs0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs0.85388 0.242313 1 0.102846 1 50 40 %_BS%_0.85388 0.242313 1 0.102846 1 50 40 Bs0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs0.000031 0.99472 1 0.001282 1 50 0 %_BS%_0.000031 0.99472 1 0.001282 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 18)(Unnamed gradient 18) 1 6 Bd[<0000000000000001010101010101010101010102020202020202020202020202030303030303030303030303040404040404040404040404040505050505050505050505050606060606060606060606060607070707070707070707070707080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313131313131314141414141414141414><FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDED><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA><000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F10101011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F30303031313132323232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E><EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><0000000001010101010101010202020202020203030303030303030404040404040405050505050505050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F1010101010101011111111111111111212121212121213131313131313131414141414141415151515151515151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A>1 %_Br<DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3><3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B><1A1A1A1A1A1A191919191919191918181818181818171717171717171716161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090808080808080807070707070707070606060606060605050505050505050404040404040403030303030303030202020202020202010101010101010000>1 %_Br<C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A39393939393939393939393939393938383838383838383838383838383737373737373737373737373737373636363636363636363636363636363535353535353535353535353535343434343434343434343434343434333333333333333333333333333333323232323232323232323232323231313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E><0001010101010202020203030303030404040405050505050606060606070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F101010101011111111121212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202020212121212222222222232323232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B>1 %_Br<FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A29292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292928282828282828282828282828><2B2B2B2B2A2A2A2A2A2A29292929292928282828282727272727272626262626262525252525252424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717171716161616161615151515151514141414141313131313131212121212121111111111111010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090909080808080808070707070707060606060606050505050505040404040404030303030303020202020202010101010101000000>1 %_Br[0.000031 0.99472 1 0.001282 1 50 0 %_BS%_0.000031 0.99472 1 0.001282 1 50 0 Bs0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs0.85388 0.242313 1 0.102846 1 50 40 %_BS%_0.85388 0.242313 1 0.102846 1 50 40 Bs0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs0.997467 1 0.178775 0.168856 1 50 80 %_BS%_0.997467 1 0.178775 0.168856 1 50 80 Bs0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS%_0.000031 0.985199 0.157778 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 20)(Unnamed gradient 20) 0 2 Bd[<0001020303040506070708090A0B0C0C0D0E0F1011111213141516161718191A1B1B1C1D1E1F2020212223242525262728292A2A2B2C2D2E2F2F3031323334343536373839393A3B3C3D3E3E3F4041424343444546474848494A4B4C4D4D4E4F5051525253545556575758595A5B5B5C5D5E5F6060616263646565666768696A6A6B6C6D6E6F6F7071727374747576777879797A7B7C7D7E7E7F8081828383848586878888898A8B8C8D8D8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6A6A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B9B9BABBBCBDBEBEBF><000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353636373839393A3B3C3C3D3E3F3F404142424344454546474848494A4B4B4C4D4E4E4F505151525354545556575758595A5A5B5C5D5D5E5F606061626363646566666768696A6A6B6C6D6D6E6F70707172737374757676777879797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596979798999A9A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADAD><000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D1E1E1F202121222324242526272728292A2A2B2C2D2D2E2F30303132333334353636373838393A3B3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7E7F80818182838484858686878889898A8B8C8C8D8E8F8F909192929394959596979898999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A9A9AAAB><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6>1 %_Br[0.75021 0.679683 0.670222 0.90164 1 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 1 50 100 Bs0.000031 0.000031 0.000031 0.000031 1 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 21)(Unnamed gradient 21) 0 5 Bd[<04050505050505050505050505060606060606060606060606070707070707070707070707070808080808080808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010101010101010111111111111111111111111111111111111111111111111111112121212121212121212121212121212121212121212121212121212121212121212121212121213131313131313131313131313131313><E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D9C9B9A9A9998979696959493929291908F8F8E8D8C8B8B8A89888887868585848383828180807F7E7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6A69686867676665656464636262616160605F5E5E5D5D5C5C5B5B5A5A59595857575656555554545353535252515150504F4F4E4E4E4D4D4C4C4B4B4B4A4A49494948484847474646464545454444444343434342424241414141404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D><FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1414141414141414141414131313131313131313131313131313121212121212121212121212121211111111111111111111111111111110101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090909090808080808080808080808080808070707070707070707070707070707060606060606060606060606060605050505050505050505050505050504><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5><EDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A19191919191919191919191919191919191919191918181818181818181818181818181818181818181717171717171717171717171717171717171717171616161616161616161616161616161616161616151515151515151515151515151515151515151515141414141414><848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757574737372727170706F6F6E6D6D6C6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858575756555554545352525151504F4F4E4E4D4C4C4B4B4A49494848474646454544434342424140403F3E3E3D3D3C3B3B3A3A393838373736353534343332323131302F2F2E2E2D2C2C2B2B2A29292828272626252524232322222120201F1F1E1D1D1C1C1B1A1A19191817171616151414131312111110100F0E0E0D0D0C0B0B0A0A09080807070605050404030202010100><131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED>0.0000311 %_Br<C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979694939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><2E2F303031313232333334343535363637383839393A3A3B3B3C3C3D3D3E3E3F3F4041414242434344444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5051515252535354545555565657575859595A5A5B5B5C5C5D5D5E5E5F5F6060616262636364646565666667676868696A6A6B6B6C6C6D6D6E6E6F6F707071727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F8080818182838384><424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3B3B3B3A3A3A3A393939383838383737373636363535353534343433333333323232313131303030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A2A2A292929292828282727272626262625252524242424232323222222212121212020201F1F1F1F1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1A191919181818181717171616161515151514141413131313>0.0000311 %_Br[0.073152 0.237522 0.969482 0.000031 1 50 100 %_BS%_0.073152 0.237522 0.969482 0.000031 1 50 100 Bs0.017517 0.897581 1 0.001343 1 35.5263 79.7753 %_BS%_0.017517 0.897581 1 0.001343 1 35.5263 79.7753 Bs0.079316 0.000031 0.930816 0.000031 1 50 55.618 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 55.618 Bs0.121096 0.516075 0.072572 0.000031 1 50 44.9438 %_BS%_0.121096 0.516075 0.072572 0.000031 1 50 44.9438 Bs0.751858 0.182254 0.256992 0.000031 1 50 19.1011 %_BS%_0.751858 0.182254 0.256992 0.000031 1 50 19.1011 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 396)(Unnamed gradient 396) 1 2 Bd[0.0000310.0000310.0000310.0000311 %_Br[0.000031 0.000031 0.000031 0.000031 1 87 44.4444 %_BS%_0.000031 0.000031 0.000031 0.000031 1 87 44.4444 Bs0.000031 0.000031 0.000031 0.000031 1 50 100 %_BS%_0.000031 0.000031 0.000031 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 72)(Unnamed gradient 72) 0 2 Bd[<CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECE><09090A0B0C0C0D0E0E0F10111112131414151617171819191A1B1C1C1D1E1F1F202122222324242526272728292A2A2B2C2D2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F40404142424344454546474848494A4B4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5E5E5F60616162636364656666676869696A6B6C6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9E9E9><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2>1 %_Br[0.806394 0.496437 0.913573 0.634302 1 50 98.3146 %_BS%_0.806394 0.496437 0.913573 0.634302 1 50 98.3146 Bs0.798978 0.033753 1 0.00119 1 50 0 %_BS%_0.798978 0.033753 1 0.00119 1 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Fish Pattern)(Fish Pattern) 77.5215 31.4824 155.3037 96.7959 [%AI3_Tile(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 96.7959 m157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 cf142.3477 90.6719 m142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C146.54 80.6494 142.3477 85.1709 142.3477 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 96.7959 m79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 cf64.5654 90.6719 m64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.874 64.1396 m13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c14.7539 66.1064 13.874 65.2266 13.874 64.1396 cf28.7969 58.0156 m28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c30.8857 52.1611 26.1396 47.416 20.2861 47.416 c19.9326 47.416 19.585 47.4355 19.2412 47.4688 C24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.6563 64.1396 m91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c95.5889 65.2266 94.709 66.1064 93.623 66.1064 c92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 cf106.5781 58.0156 m106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c103.9219 68.6152 108.668 63.8691 108.668 58.0156 c108.668 52.1611 103.9219 47.416 98.0684 47.416 c97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 31.4824 m157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 cf142.3477 25.3594 m142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C151.5596 35.9395 151.2109 35.959 150.8584 35.959 c145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C146.54 15.3359 142.3477 19.8574 142.3477 25.3594 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 31.4824 m79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 cf64.5654 25.3594 m64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C73.7773 35.9395 73.4297 35.959 73.0762 35.959 c67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-4012.5 4714.4351 m-3798.8999 4714.4351 L-3798.8999 4706.6343 L-4012.5 4706.6343 L-4012.5 4714.4351 Ln0 O0 0 0 1 k-4012.5 4710.5352 m-4002.4856 4713.0269 -3995.6863 4714.375 -3983.7007 4714.4351 c-3970.7185 4714.5 -3905.6997 4714.4351 y-3840.6816 4714.5 -3827.6997 4714.4351 v-3815.7124 4714.375 -3808.9136 4713.0269 -3798.8999 4710.5352 C-3808.9136 4708.0435 -3815.7124 4706.6953 -3827.6997 4706.6343 c-3840.6816 4706.5688 -3905.6997 4706.6343 y-3970.7185 4706.5688 -3983.7007 4706.6343 v-3995.6863 4706.6953 -4002.4856 4708.0435 -4012.5 4710.5352 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 12)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7885 8587 m-7787.2451 8587 L-7787.2451 8566.2842 L-7885 8566.2842 L-7885 8587 Ln0 O0 g1 XR-7787.5586 8582.3184 m-7802.8247 8568.5303 -7820.5537 8589.4492 -7835.9277 8577.166 C-7834.4199 8571.5137 -7828.7598 8578.4678 -7826.5176 8573.8213 C-7826.4341 8572.2207 -7829.6313 8573.7207 -7829.5127 8571.6006 C-7827.6245 8568.1914 -7822.8955 8568.6885 -7821.5664 8572.7373 C-7815.3115 8570.7676 -7808.7734 8564.8242 -7802.7847 8566.6172 C-7801.2671 8567.9678 -7802.0708 8569.1514 -7801.6211 8570.4277 C-7794.2871 8565.9922 -7785.4644 8575.1279 -7787.5586 8582.3184 Cf-7831.2842 8583.9326 m-7831.8247 8584.3086 -7830.9277 8585.4199 -7831.2529 8585.9082 C-7833.3237 8585.1563 -7835.6919 8581.0781 -7837.4731 8578.3105 C-7837.2632 8579.8398 -7838.6641 8581.1641 -7840.0781 8578.9326 C-7840.2383 8578.1152 -7839.3667 8577.8281 -7839.6729 8576.9365 C-7840.8306 8575.3682 -7841.8472 8576.8535 -7842.7798 8576.625 C-7843.3184 8575.8613 -7843.6143 8575.2188 -7843.6816 8574.6943 C-7837.5537 8571.874 -7830.9263 8583.6768 -7824.7456 8584.1025 C-7824.9048 8587.1152 -7828.8555 8588.8008 -7831.2842 8583.9326 Cfuu0 XR-7828.1602 8578.6602 m-7843.0142 8572.1201 -7864.4731 8576.3418 -7880.3687 8576.3193 c-7886.2988 8576.3125 -7875.8965 8576.3213 -7881.8267 8576.3262 cN0 O0 g-7825.8052 8577.4395 m-7843.1475 8570.2637 -7862.9341 8575.0557 -7881.0532 8574.9863 C-7881.8608 8575.873 -7882.6685 8576.7617 -7883.4751 8577.6475 C-7882.6973 8577.6475 -7881.9194 8577.6465 -7881.1421 8577.6533 C-7880.3345 8576.7656 -7879.5273 8575.8789 -7878.7202 8574.9922 C-7879.3516 8575.002 -7879.9844 8574.9951 -7880.6157 8574.9951 c-7882.3735 8574.998 -7886.9165 8577.6621 -7883.0376 8577.6572 c-7882.4063 8577.6572 -7881.7734 8577.6641 -7881.1421 8577.6533 c-7879.4155 8577.626 -7874.8184 8575.0234 -7878.7202 8574.9922 c-7879.4976 8574.9834 -7880.2759 8574.9863 -7881.0532 8574.9863 c-7882.8081 8574.9854 -7887.3574 8577.6328 -7883.4751 8577.6475 c-7866.1177 8577.7148 -7847.1025 8573.0137 -7830.5151 8579.8789 c-7829.1035 8580.4639 -7823.8081 8578.2666 -7825.8052 8577.4395 c-7825.8052 8577.4395 lfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 2)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7867 8587 m-7885 8587 L-7885 8569 L-7867 8569 L-7867 8587 Lnuu0 Ap0 O0 0 0 1 k-7866.9658 8579.4375 m-7885 8579.4375 L-7885 8576.5625 L-7866.9658 8576.5625 L-7866.9658 8579.4375 L-7866.9658 8579.4375 LfUu0.15 1 0.9 0.1 k-7866.9658 8578.7002 m-7883.5 8578.7002 L-7883.5 8577.3008 L-7866.9658 8577.3008 L-7866.9658 8578.7002 L-7866.9658 8578.7002 LfUu0 1 1 0 k-7866.9658 8578.3125 m-7882.5 8578.3125 L-7882.5 8577.6865 L-7866.9658 8577.6865 L-7866.9658 8578.3125 L-7866.9658 8578.3125 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 3)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7867 8587 m-7885 8587 L-7885 8569 L-7867 8569 L-7867 8587 Lnuu0 Ap0 O0 0 0 1 k-7867 8579.4375 m-7885 8579.4375 L-7885 8576.5625 L-7867 8576.5625 L-7867 8579.4375 L-7867 8579.4375 LfUu0.15 1 0.9 0.1 k-7867 8578.7002 m-7885 8578.7002 L-7885 8577.3008 L-7867 8577.3008 L-7867 8578.7002 L-7867 8578.7002 LfUu0 1 1 0 k-7867 8578.3125 m-7885 8578.3125 L-7885 8577.6865 L-7867 8577.6865 L-7867 8578.3125 L-7867 8578.3125 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7884.8833 8586.9551 m-7793.0479 8586.9551 L-7793.0479 8582.6758 L-7884.8833 8582.6758 L-7884.8833 8586.9551 Ln0 O0 0 0 1 k-7884.6631 8584.2754 m-7885 8584.3418 -7884.4814 8584.5313 -7884.8833 8584.3887 C-7884.8379 8584.2705 -7884.7725 8584.1816 -7884.6631 8584.2754 Cf-7794.1675 8584.4414 m-7795.2524 8585.2041 -7796.6816 8584.4336 -7797.8701 8584.9199 C-7798.0098 8584.9521 -7797.8345 8584.502 -7798.1484 8584.6025 C-7799.3008 8585.1953 -7801.1162 8584.8418 -7802.5195 8584.3848 C-7802.4346 8584.2666 L-7802.7017 8584.1816 -7803.0283 8584.5723 -7803.3115 8584.5176 C-7803.3135 8584.4395 -7803.2207 8584.4063 -7803.2861 8584.2988 C-7803.3574 8584.5352 -7803.7983 8584.4082 -7803.9185 8584.584 C-7804.0303 8584.4922 -7804.0195 8584.3047 -7804.1641 8584.2012 C-7804.3262 8584.4697 L-7804.7769 8585.1094 -7805.4209 8584.4258 -7806.0361 8584.7559 C-7806.0063 8584.6934 -7805.9453 8584.6445 -7805.9941 8584.584 C-7806.9814 8584.9727 -7808.2168 8584.9004 -7809.3208 8585.043 C-7809.2769 8584.9482 -7809.2363 8584.7754 -7809.3008 8584.668 C-7809.3555 8584.9512 -7809.6963 8585.0225 -7809.9922 8585.0781 C-7810.1255 8584.7871 -7810.4995 8585.3438 -7810.8467 8585.1836 C-7810.8169 8585.1191 L-7811.0732 8585.4238 -7811.1973 8584.9434 -7811.4053 8585.3086 C-7811.5684 8585.0801 L-7811.6807 8585.4902 -7811.9395 8584.8672 -7812.1514 8585.0762 C-7812.1445 8585.1602 L-7812.3442 8585.2598 -7812.4482 8585.0537 -7812.6338 8585.123 C-7812.6514 8585.0762 L-7813.0854 8585.1836 -7813.3379 8584.9551 -7813.3271 8585.2754 C-7813.4795 8585.0186 -7812.9063 8585.1582 -7813.1455 8584.7852 C-7814.5732 8585.1152 -7816.0459 8585.0508 -7817.4834 8585.0566 C-7817.6465 8584.9277 -7817.7505 8584.8887 -7817.7871 8584.7676 C-7817.9307 8584.832 -7818.3281 8584.8262 -7818.4585 8584.9902 C-7818.4102 8584.9834 -7818.5513 8584.8262 -7818.6274 8584.8105 C-7818.8887 8584.6895 -7818.9131 8585.1621 -7819.2002 8585.0186 C-7819.0859 8584.9336 -7819.0469 8584.8301 -7819.0854 8584.7109 C-7819.3301 8584.9609 -7819.6577 8584.9209 -7819.9473 8585.002 C-7819.9023 8584.9482 -7819.8325 8584.916 -7819.8433 8584.8154 C-7820.1602 8585.0986 -7820.4209 8584.7559 -7820.6982 8584.9346 C-7820.5947 8584.75 L-7821.0415 8584.5254 -7820.7266 8585.1367 -7821.1128 8585.0039 C-7821.02 8584.9453 -7821.0527 8584.873 -7821.0361 8584.7979 C-7821.3965 8585.1338 -7821.9795 8585.0225 -7822.3389 8585.1367 C-7822.3174 8585.1113 -7822.3232 8585.0605 Y-7822.7148 8585.1025 -7823.1245 8584.998 -7823.5552 8585.1445 C-7823.7119 8585.0625 -7823.5039 8584.6934 -7823.9185 8584.7617 C-7823.9033 8585.1328 -7824.6221 8584.9141 -7824.3779 8585.334 C-7824.7319 8585.2734 -7825.2925 8585.1338 -7825.5283 8585.2598 C-7825.3691 8585.1191 -7825.7007 8584.8066 -7825.4063 8584.7754 C-7825.6289 8584.5498 L-7825.5957 8584.3984 -7825.3999 8584.6016 -7825.4707 8584.4102 C-7825.6182 8584.4258 -7826.0479 8584.5723 -7826.1797 8584.5117 C-7826.4531 8584.7393 -7826.7041 8585.1641 -7827.1465 8585.2109 C-7826.9385 8585.0664 -7827.2646 8584.8018 -7827.1235 8584.7383 C-7827.7407 8585.4492 L-7827.8877 8585.4668 -7827.7725 8585.1563 -7827.9854 8585.2529 C-7827.9746 8585.3516 -7828.0674 8585.4121 -7828.1318 8585.4922 C-7828.1875 8585.4492 -7828.7441 8585.584 -7828.8081 8585.2188 C-7828.8735 8585.0762 -7828.5684 8585.1426 -7828.7314 8585.0117 C-7829.0029 8585.0156 -7829.0151 8585.1406 -7829.2871 8585.1465 C-7829.2925 8585.0977 L-7829.4717 8585.043 -7829.8213 8585.2529 -7829.6265 8585.4551 C-7829.5015 8585.4668 -7829.6738 8585.2354 -7829.4888 8585.3418 C-7829.6152 8585.5537 -7829.9312 8585.6133 -7830.2031 8585.6172 C-7830.1104 8585.5586 -7830.1216 8585.4609 -7830.0845 8585.3574 C-7830.4497 8585.6445 -7830.8369 8585.7354 -7831.2451 8585.8555 C-7831.2515 8586.0293 -7831.0928 8585.5391 -7831.0327 8585.6309 C-7831.5557 8585.3896 -7832.1128 8585.9727 -7832.5479 8585.6201 C-7832.4766 8585.5898 -7832.5098 8585.8672 -7832.5146 8585.8184 C-7832.7666 8585.7969 -7832.7549 8585.5449 -7832.9189 8585.6377 C-7832.9355 8585.4902 -7833.1255 8585.6855 -7833.2944 8585.7305 C-7833.3818 8585.8369 -7833.3384 8585.6582 -7833.1914 8585.6426 C-7833.4268 8585.7676 -7834.3691 8585.9941 -7834.9131 8585.7793 C-7834.9023 8585.877 -7835.2471 8586.1377 -7835.3721 8586.127 C-7835.3232 8585.8984 L-7835.4375 8585.7617 -7835.7422 8585.918 -7835.7632 8585.7227 C-7836.0303 8586 -7834.7344 8585.4863 -7835.0957 8585.7002 C-7835.1895 8585.5098 -7835.5991 8586.0645 -7835.5215 8585.7529 C-7835.7725 8585.7617 -7836.0161 8586.0186 -7836.2559 8585.8047 C-7836.1865 8585.8418 -7836.0522 8585.4873 -7836.2549 8585.5039 C-7836.6123 8585.5449 -7836.3564 8585.6133 -7836.6465 8585.6895 C-7836.8281 8585.7832 L-7836.8398 8586.0059 -7837.1475 8585.7529 -7837.0146 8586.002 C-7837.0586 8585.8184 -7837.5337 8586.1152 -7837.4971 8585.7461 C-7837.4473 8585.4551 L-7837.6016 8585.4766 -7837.7002 8585.7617 -7837.8213 8585.8896 C-7837.8418 8585.8633 -7837.8823 8585.8047 -7837.8745 8585.7578 C-7837.8994 8586.2031 -7838.2432 8585.7207 -7838.4268 8586.0645 C-7838.7505 8585.9102 -7839.2495 8586.0508 -7839.4023 8585.7734 C-7839.6514 8585.9082 -7839.8784 8586.0684 -7840.1621 8585.9727 C-7840.1055 8585.9307 -7840.0283 8585.918 -7840.0122 8585.8223 C-7840.1904 8585.6914 -7840.2344 8585.8086 -7840.3975 8585.8809 C-7840.3608 8585.8145 -7840.7539 8585.6201 -7840.9521 8585.4629 C-7841.1992 8585.5957 -7841.1143 8585.8359 -7841.1392 8585.9824 C-7841.3652 8585.543 -7841.8379 8586.2656 -7842.1211 8585.8672 C-7842.0352 8585.8066 -7841.7598 8585.6514 -7841.9658 8585.541 C-7842.1919 8585.1025 -7842.4219 8585.8652 -7842.7861 8585.6543 C-7842.6968 8586.0186 L-7842.8594 8585.793 -7843.2334 8586.2305 -7843.1963 8585.8594 C-7843.3184 8585.9902 -7843.6265 8585.7383 -7843.5859 8586.0938 C-7844.1846 8585.793 -7845.0425 8586.2754 -7845.4102 8585.6377 C-7845.4961 8585.6973 -7845.7104 8585.6367 -7845.6665 8585.8193 C-7845.5239 8586.0176 -7845.4673 8585.6777 -7845.4141 8585.8125 C-7845.4912 8585.8232 -7845.5078 8585.9209 -7845.5161 8585.9697 C-7845.7021 8585.8887 -7845.8486 8585.8633 -7845.6729 8585.5674 C-7846.0869 8585.3477 -7846.1001 8586.1719 -7846.6274 8586.0332 C-7846.6035 8585.8857 -7846.6436 8585.8301 -7846.7979 8585.8535 C-7847.0903 8586.1055 L-7847.4312 8586.0469 -7847.2842 8585.7705 -7847.2925 8585.5215 C-7847.4746 8585.5645 -7847.6973 8585.5527 -7847.7803 8585.7383 C-7848.0015 8585.4258 L-7847.8398 8585.6514 -7848.1514 8585.5762 -7848.2368 8585.6367 C-7848.1514 8585.5762 L-7848.1846 8585.4697 -7848.3955 8585.5352 -7848.5024 8585.5664 C-7848.4766 8585.7207 -7848.2617 8585.7832 -7848.1445 8585.8281 C-7848.2373 8585.9375 -7848.3823 8585.9121 -7848.5059 8586.041 C-7848.4648 8585.7969 -7848.8027 8585.8672 -7848.9473 8585.8418 C-7849.1133 8585.7891 -7849.1348 8586.0605 -7849.1831 8586.0527 C-7849.1875 8585.9258 -7849.4541 8586.0313 -7849.3247 8585.8535 C-7849.2681 8585.8125 -7849.1953 8585.9766 -7849.1016 8585.8652 C-7849.2109 8585.7705 -7849.1982 8585.5498 -7849.4258 8585.7109 C-7849.5967 8585.832 -7849.3818 8586.1934 -7849.7061 8586.0391 C-7849.6211 8585.9785 -7849.6055 8585.8809 -7849.5391 8585.793 C-7849.8433 8585.666 L-7849.8564 8585.8887 L-7849.8975 8585.832 -7849.8691 8585.8125 -7849.8877 8585.7832 C-7849.9785 8586.0176 -7850.3521 8585.8555 -7850.4209 8586.1191 C-7850.5742 8586.1426 -7850.7441 8585.9648 -7850.8906 8585.9395 C-7850.8623 8585.9199 L-7851.0415 8585.7891 -7851.2793 8585.875 -7851.4297 8586.0254 C-7851.4219 8585.9766 L-7851.5195 8585.959 -7851.7505 8585.9941 -7851.8735 8586.125 C-7852.1201 8585.957 -7851.9561 8585.2842 -7852.2295 8585.5645 C-7852.48 8585.5723 -7852.6221 8585.9727 -7852.5215 8586.1152 C-7852.9717 8585.9648 -7853.4834 8586.3281 -7853.9009 8585.9824 C-7853.9658 8586.0723 -7853.9248 8586.1289 -7854.0586 8586.1816 C-7854.7197 8586.0938 -7855.4551 8586.4453 -7855.9814 8586.0078 C-7855.79 8585.9141 -7855.9688 8585.7852 -7855.9727 8585.6582 C-7856.1309 8585.8574 -7856.1631 8585.4512 -7856.2197 8585.793 C-7856.2041 8585.9941 -7856.2197 8586.0918 -7856.0337 8586.1729 C-7856.4282 8586.2813 -7857.0283 8586.2813 -7857.2471 8586.0938 C-7857.1377 8586.1865 -7857.2227 8586.248 -7857.3086 8586.3086 C-7857.2803 8585.9873 -7857.5713 8585.9395 -7857.7915 8586.0527 C-7857.8223 8586.248 L-7857.9658 8586.0469 L-7858.0503 8586.1094 -7858.0591 8586.457 -7858.2773 8586.2695 C-7858.2891 8586.1934 -7858.3018 8586.1162 -7858.3418 8586.0605 C-7858.5693 8586.2207 -7858.8906 8586.4922 -7859.1377 8586.3262 C-7859.3398 8586.041 L-7859.4453 8586.0723 -7859.6235 8586.2441 -7859.4375 8586.3262 C-7859.8594 8586.1543 -7860.1309 8586.1328 -7860.2646 8585.8857 C-7860.9912 8586.4873 -7862.0459 8586.5117 -7862.8906 8586.4688 C-7862.8652 8586.3223 L-7863.0923 8586.1855 -7862.9834 8586.5781 -7863.1416 8586.4766 C-7863.0684 8586.3369 -7863.3145 8586.1729 -7863.1362 8586.002 C-7863.4609 8585.8477 -7863.5547 8586.2559 -7863.7656 8586.3223 C-7863.7979 8586.5146 -7863.5957 8586.1992 -7863.6367 8586.4434 C-7863.6729 8586.5117 -7864.0859 8586.293 -7864.1362 8586.584 C-7864.2178 8586.4697 -7864.1543 8586.2559 -7864.1104 8586.1377 C-7864.3086 8586.2793 L-7864.5513 8585.9395 -7863.7559 8585.6719 -7864.0107 8585.2529 C-7864.1934 8585.2988 L-7864.3682 8584.9941 -7863.71 8584.9551 -7864.1689 8584.8506 C-7864.3682 8584.9941 -7864.5381 8585.416 -7864.3608 8585.5449 C-7864.7754 8585.625 -7864.5527 8586.2383 -7864.9985 8586.2139 C-7865.1201 8586.043 -7864.6416 8586.1729 -7864.7275 8585.9336 C-7864.9375 8585.6992 -7865.1484 8586.0645 -7865.3354 8585.9824 C-7865.1279 8586.0918 -7865.3032 8586.3857 -7865.4375 8586.4395 C-7865.6641 8586.3018 -7865.29 8586.1641 -7865.6113 8586.1338 C-7865.6641 8586.3018 -7865.9595 8586.4277 -7865.7041 8586.5449 C-7865.8203 8586.9258 -7866.0381 8586.4395 -7866.2129 8586.7344 C-7866.3174 8586.4668 -7865.8823 8586.1152 -7866.2354 8585.9814 C-7866.1792 8586.2393 -7866.6704 8586.332 -7866.4839 8586.7148 C-7866.6221 8586.6406 -7866.6367 8586.4375 -7866.5361 8586.2793 C-7866.7334 8586.1201 -7867.0151 8586.75 -7867.0801 8586.2383 C-7867.1479 8586.502 L-7867.21 8586.416 -7867.2983 8586.3516 -7867.3994 8586.209 C-7867.5732 8586.2041 -7867.96 8586.5664 -7867.9443 8586.168 C-7868 8586.209 -7868.3975 8586.1914 -7868.2441 8586.4668 C-7867.9971 8586.6348 -7867.96 8586.2656 -7867.8223 8586.6377 C-7867.9971 8586.334 -7868.1787 8586.6777 -7868.3213 8586.7793 C-7868.3447 8586.625 L-7868.4297 8586.6855 -7868.6255 8586.6514 -7868.6787 8586.8184 C-7868.6133 8586.7305 -7868.6475 8586.625 -7868.7148 8586.5879 C-7868.8042 8586.8223 L-7869.1494 8586.9395 -7868.8857 8586.4102 -7869.2217 8586.4785 C-7868.9663 8586.2969 L-7869.0225 8586.3359 -7869.1367 8586.1162 -7869.2979 8586.1895 C-7869.3604 8586.4033 -7869.4775 8586.6602 -7869.5313 8586.8262 C-7869.7207 8586.9199 -7869.6162 8586.585 -7869.8027 8586.8047 C-7869.5586 8586.5469 L-7869.5215 8586.4766 -7869.7231 8586.1934 -7869.9761 8586.1992 C-7870.1377 8586.2734 -7870.3887 8586.582 -7870.1338 8586.6992 C-7870.2607 8586.7031 -7870.4385 8586.5723 -7870.3379 8586.416 C-7870.6255 8586.4902 -7870.2998 8586.6465 -7870.5479 8586.7793 C-7870.6494 8586.6367 -7870.9658 8586.4336 -7871.1563 8586.2266 C-7870.8975 8585.8682 L-7871.0693 8585.8652 L-7870.8467 8585.5781 -7871.1826 8585.6465 -7871.0566 8585.3438 C-7871.1743 8585.2969 -7871.3169 8585.3994 -7871.4307 8585.4785 C-7871.0864 8585.9629 -7871.8159 8586.1406 -7871.7158 8586.582 C-7872.1875 8586.7031 -7872.0107 8585.5078 -7872.5024 8586.1992 C-7872.4219 8586.3145 -7872.6533 8586.6504 -7872.3564 8586.5225 C-7872.6494 8586.4746 -7872.5557 8586.9658 -7872.9014 8586.7832 C-7872.6455 8586.6016 -7873.1763 8586.3359 -7872.8066 8586.0723 C-7872.8311 8586.2188 -7872.6001 8586.1836 -7872.5435 8586.1426 C-7872.6641 8585.9727 -7872.5186 8585.6973 -7872.8184 8585.6973 C-7873.0015 8585.7393 -7873.2524 8585.748 -7873.2158 8585.9785 C-7873.2085 8586.2314 -7872.9365 8585.9512 -7873.0537 8586.207 C-7873.4185 8586.2949 -7873.4795 8585.9102 -7873.6304 8586.3594 C-7873.3999 8586.3232 -7873.3423 8586.584 -7873.3467 8586.7578 C-7873.6143 8586.8633 L-7873.5625 8586.6953 L-7873.9922 8586.5742 -7873.6895 8587 -7874.1055 8586.9551 C-7874.3008 8586.623 L-7874.2017 8586.3369 -7873.6953 8586.75 -7873.7695 8586.2842 C-7874.04 8586.2656 -7874.1299 8586.502 -7874.3848 8586.3818 C-7874.3281 8586.3418 -7874.2505 8586.3301 -7874.1943 8586.2891 C-7874.2915 8586.2734 -7874.3877 8585.6563 -7874.7734 8586.0176 C-7874.9727 8586.1582 -7874.8262 8586.1836 -7874.8311 8586.3574 C-7875.2656 8586.4102 -7875.3955 8586.5879 -7875.6753 8586.6152 C-7875.6177 8586.2754 -7876.1699 8586.582 -7875.8608 8586.2344 C-7875.7188 8586.4336 -7875.0903 8586.4141 -7874.9365 8586.0898 C-7875.0947 8585.6865 -7874.5952 8586.1465 -7874.5024 8585.7383 C-7874.8506 8585.7285 -7874.8335 8585.332 -7874.8896 8585.0723 C-7874.9863 8585.0537 -7875.0801 8585.1641 -7875.1377 8585.2041 C-7875.1787 8585.4492 -7875.0522 8585.4453 -7875.0449 8585.6973 C-7875.4336 8585.6309 -7875.8081 8585.7676 -7876.0225 8586.0059 C-7876.1523 8585.8848 -7876.1113 8585.6406 -7875.9575 8585.6172 C-7876.4199 8585.6895 -7876.9141 8585.6563 -7877.3535 8585.582 C-7877.0693 8585.9814 -7877.8433 8585.6758 -7877.6494 8586.0078 C-7877.4141 8586.0977 -7877.2119 8586.3818 -7877.3418 8586.5605 C-7877.4888 8586.5352 -7877.3369 8586.3857 -7877.3984 8586.3008 C-7877.5859 8586.5186 -7877.6895 8585.9512 -7877.8735 8586.2949 C-7877.4512 8586.166 -7877.7915 8585.8086 -7877.7139 8585.4961 C-7878.0186 8585.6719 -7877.7007 8585.2734 -7878.0024 8585.2734 C-7878.3057 8585.4473 -7878.6787 8585.584 -7879.0161 8585.6514 C-7879.4399 8585.3555 -7880.0898 8585.6465 -7880.4683 8585.6582 C-7880.6665 8585.5 -7880.5322 8585.1465 -7880.7471 8585.085 C-7880.9995 8585.0918 -7880.5601 8585.4668 -7880.9336 8585.3047 C-7880.8975 8585.2344 L-7881.0107 8585.3164 -7881.5825 8584.9941 -7881.6929 8585.502 C-7881.5776 8585.1191 L-7881.6475 8585.084 -7881.7119 8585.1719 -7881.7695 8585.2129 C-7881.7725 8585.0879 -7881.8535 8584.9746 -7881.7402 8584.8926 C-7881.9707 8584.6289 -7882.2241 8584.9346 -7882.4746 8584.9453 C-7882.3135 8585.1719 L-7882.7422 8585.3496 -7883.0293 8585.125 -7883.4443 8585.2041 C-7883.4316 8584.9824 L-7883.6787 8585.1152 L-7883.6182 8584.9004 -7883.8447 8584.7617 -7883.9751 8584.9414 C-7883.3335 8584.3984 L-7883.1553 8584.5293 -7883.5283 8584.666 -7883.4165 8584.8848 C-7883.3213 8585.0762 -7882.9375 8585.0156 -7882.8755 8584.8018 C-7883.0225 8584.7773 -7883.0293 8584.8262 -7883.1436 8584.9063 C-7883.1919 8584.5977 -7882.9688 8584.6094 -7882.8584 8584.4033 C-7882.9355 8584.416 -7883.0449 8584.3223 -7883.0615 8584.4199 C-7882.9102 8584.2695 -7882.7578 8584.2461 -7882.5059 8584.2383 C-7882.6763 8584.3594 -7882.4131 8584.4297 -7882.4775 8584.5176 C-7882.4575 8584.2461 -7882.2168 8584.1621 -7881.9053 8584.2383 C-7881.6831 8584.5527 -7881.3208 8584.0361 -7880.96 8584.123 C-7881.1064 8584.3984 -7881.2935 8584.6191 -7881.5127 8584.7305 C-7881.2861 8584.8682 -7881.2607 8584.7227 -7881.0337 8584.8613 C-7880.9238 8584.6563 -7880.8457 8584.3418 -7880.5503 8584.2168 C-7880.5342 8584.4199 L-7880.2666 8584.3164 -7880.2666 8584.0156 -7879.9258 8584.0723 C-7879.3418 8584.1719 -7878.7407 8584.1719 -7878.2949 8584.1973 C-7878.2783 8584.3994 L-7878.0303 8583.9658 -7877.4521 8584.2393 -7877.1182 8584.0469 C-7876.5503 8584.2422 -7875.8848 8583.8535 -7875.5938 8584.2031 C-7874.5913 8584.0469 -7873.7148 8583.8945 -7872.6768 8583.9688 C-7872.8516 8584.2637 L-7872.6655 8584.0469 -7872.7305 8584.4336 -7872.5479 8584.3896 C-7872.7578 8584.1543 -7872.2949 8584.084 -7872.1665 8583.9033 C-7871.7041 8584.1328 -7871.1104 8583.8828 -7870.7007 8583.6758 C-7870.6846 8583.8789 L-7870.2705 8583.498 -7869.7759 8583.832 -7869.2598 8583.8945 C-7869.2007 8583.9785 -7869.1074 8584.1689 -7868.9536 8584.1465 C-7868.6738 8583.8184 -7868.5273 8583.8418 -7868.1167 8583.6367 C-7867.8169 8583.6367 -7867.3301 8583.7178 -7867.0254 8583.8457 C-7865.8975 8583.3848 -7864.7456 8583.6797 -7863.5732 8583.4023 C-7863.4888 8583.6406 L-7862.3521 8583.1309 -7860.9541 8583.5938 -7859.9839 8583.332 C-7860.0776 8583.7393 L-7859.7734 8583.8652 -7859.3843 8583.6328 -7859.4619 8583.3438 C-7859.1567 8583.4688 -7858.7007 8583.1465 -7858.5068 8583.4814 C-7858.1953 8583.5566 -7858.1255 8583.293 -7857.8662 8583.2383 C-7857.2422 8583.3926 -7857.0107 8583.3574 -7856.4224 8583.2813 C-7856.5684 8583.2559 L-7856.6328 8583.3457 -7856.6387 8583.5186 -7856.4922 8583.5449 C-7856.2725 8583.4316 -7855.6846 8583.6543 -7855.9033 8583.168 C-7855.2754 8583.4492 -7854.4385 8582.9395 -7853.8271 8583.3184 C-7853.8789 8583.1855 -7853.7246 8583.1602 -7853.6602 8583.0703 C-7853.1089 8583.0645 -7852.5293 8583.3359 -7852.0898 8583.1094 C-7852.0024 8583.1758 -7852.2295 8583.3359 -7852.0049 8583.3496 C-7851.8721 8583.2988 -7852.0024 8583.1758 -7851.8384 8583.1016 C-7850.9453 8582.8535 -7850.0303 8583.3574 -7849.2188 8583.293 C-7847.7754 8583.0361 -7846.2695 8583.166 -7844.8867 8583.123 C-7844.9023 8583.2207 L-7844.4395 8582.8477 -7843.8159 8583.6025 -7843.4463 8583.041 C-7843.3369 8583.1338 -7843.0283 8583.085 -7843.1094 8583.2734 C-7842.7407 8583.0098 -7842.0771 8583.5215 -7841.5439 8583.1865 C-7841.5928 8583.1777 -7841.6211 8583.1973 -7841.6777 8583.2393 C-7841.1392 8583.4551 -7840.6641 8583.1602 -7840.0957 8583.3555 C-7840.1533 8583.3975 -7840.2583 8583.4277 -7840.2754 8583.5254 C-7840.0557 8583.7129 -7839.7549 8583.1133 -7839.6348 8583.584 C-7839.5088 8583.5801 -7839.5449 8583.3477 -7839.6221 8583.3613 C-7838.3779 8583.5449 -7837.0498 8583.2441 -7835.7549 8583.1367 C-7834.8271 8583.418 -7835.6982 8583.9297 -7834.9663 8583.5781 C-7834.9063 8583.6689 -7834.9229 8583.3984 -7834.9131 8583.4961 C-7834.6299 8583.3643 -7834.4717 8584.0215 -7834.2754 8583.7754 C-7834.3564 8583.4863 -7834.1445 8583.6133 -7834.1387 8583.4375 C-7833.5713 8583.625 -7833.4575 8583.8857 -7833.0098 8583.666 C-7833.0435 8583.8184 L-7832.5186 8583.3887 -7831.9102 8583.6191 -7831.4673 8583.123 C-7828.5728 8583.0332 -7825.7983 8582.7578 -7822.9761 8582.7002 C-7820.1865 8582.7949 -7817.4551 8582.5723 -7814.6221 8582.8359 C-7813.9585 8583.2354 -7813.9087 8583.2246 -7813.1797 8583.0625 C-7813.2095 8583.127 -7813.2549 8583.1426 -7813.2061 8583.2031 C-7813.1699 8582.875 -7812.6929 8583.1719 -7812.6235 8582.8594 C-7811.5762 8582.9199 -7810.6113 8582.8301 -7809.5337 8582.8281 C-7809.7041 8582.8633 -7809.7896 8583.1309 -7809.5869 8583.1094 C-7809.3755 8582.9004 L-7809.3408 8582.9922 L-7809.2021 8582.9434 -7809.0513 8582.7813 -7809.1943 8582.6758 C-7806.4873 8582.3926 -7803.8242 8583.0508 -7801.1729 8582.9697 C-7800.5435 8583.1064 -7799.6475 8582.9814 -7798.9629 8582.9141 C-7796.9355 8583.3516 -7795.1079 8583.7041 -7793.0479 8583.3984 C-7793.3169 8584.2461 -7794.1675 8584.4414 Vf-7884.2578 8584.2422 m-7884.1855 8584.4063 -7883.9497 8584.4961 -7884.1377 8584.7148 C-7884.1611 8584.5605 -7884.2822 8584.3887 -7884.2578 8584.2422 Cf-7877.9619 8585.9297 m-7877.9536 8585.8809 -7877.8721 8585.9961 -7877.8521 8586.0225 C-7877.9297 8586.0352 -7878.0024 8586.1729 -7878.0645 8586.0879 C-7877.9854 8586.0762 -7877.9976 8585.998 -7877.9619 8585.9297 Cf-7876.3521 8586.0273 m-7876.3765 8586.1729 -7876.7207 8586.2891 -7876.9238 8586.3066 C-7876.3521 8586.0273 Lf-7874.8521 8586.6289 m-7874.7227 8586.752 -7874.7583 8586.8193 -7874.9326 8586.8154 C-7874.9453 8586.7383 -7874.8877 8586.6992 -7874.8521 8586.6289 Cf-7874.7456 8586.2969 m-7874.6211 8586.293 -7874.5591 8586.3789 -7874.4985 8586.4629 C-7874.5029 8586.3369 -7874.7871 8586.541 -7874.7456 8586.2969 Cf-7871.4893 8586.7207 m-7871.4111 8586.709 -7871.2417 8586.5879 -7871.1689 8586.75 C-7871.2505 8586.6367 -7871.5498 8586.9346 -7871.4893 8586.7207 Cf-7869.9761 8586.5 m-7869.9272 8586.5098 -7869.9072 8586.5361 -7869.8506 8586.4961 C-7869.7607 8586.5625 -7869.8555 8586.6689 -7869.9312 8586.6826 C-7869.9761 8586.5 Lf-7842.4287 8585.9141 m-7842.5923 8585.9863 L-7842.5684 8585.8418 L-7842.4287 8585.9141 Lf-7830.3574 8585.9063 m-7830.1943 8585.8145 -7830.2441 8586.043 -7830.2168 8586.0645 C-7830.3643 8586.0801 -7830.1621 8585.8848 -7830.3574 8585.9063 Cf-7823.8486 8585.1777 m-7823.8984 8585.1816 L-7823.8818 8584.8828 L-7823.8486 8585.1777 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 5)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7867 8587 m-7885 8587 L-7885 8569 L-7867 8569 L-7867 8587 Lnuu0 Ap0 O0 0 0 1 k-7874.5625 8587 m-7877.4375 8587 L-7877.4375 8578.5 L-7877.4375 8577.4316 -7876.5684 8576.5625 -7875.5 8576.5625 C-7866.9165 8576.5625 L-7866.9165 8579.4375 L-7874.5625 8579.4375 L-7874.5625 8587 L-7874.5625 8587 LfUu0.15 1 0.9 0.1 k-7875.2998 8587 m-7876.7002 8587 L-7876.7002 8578.5 L-7876.7002 8577.8389 -7876.1621 8577.3008 -7875.5 8577.3008 C-7866.9165 8577.3008 L-7866.9165 8578.7002 L-7875.2998 8578.7002 L-7875.2998 8587 L-7875.2998 8587 LfUu0 1 1 0 k-7875.6875 8587 m-7876.3125 8587 L-7876.3125 8578.5 L-7876.3125 8578.0527 -7875.9482 8577.6865 -7875.5 8577.6865 C-7866.9165 8577.6865 L-7866.9165 8578.3125 L-7875.5 8578.3125 L-7875.6035 8578.3125 -7875.6875 8578.3975 -7875.6875 8578.5 C-7875.6875 8587 L-7875.6875 8587 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 55)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7858.9727 8587 m-7858.9727 8560.9717 L-7885 8560.9717 L-7885 8587 L-7858.9727 8587 Ln0 Ap0 R0.7084 0.636438 0.515526 0.381872 K1.125 w-7885 8569.6465 m-7858.9727 8569.6465 lS0.64 0.650477 0.701045 0.510735 K-7885 8578.3242 m-7858.9727 8578.3242 lS0.597742 0.537865 0.64184 0.350469 K0.375 w-7885 8573.9854 m-7858.9727 8573.9854 lS0 O0.597742 0.537865 0.64184 0.350469 k1 w-7863.5742 8574.0117 m-7863.3442 8573.7402 -7863.6914 8573.4541 -7864 8573.2432 c-7864.1118 8573.166 -7864.5215 8573.3789 -7864.7466 8573.2129 c-7865.0439 8572.9951 -7865.1826 8572.9082 -7865.4824 8572.9141 c-7865.6455 8572.918 -7866.0435 8573.0479 -7866.1895 8573.0781 c-7866.5679 8573.1543 -7866.8022 8573.3516 -7867.3672 8573.2549 c-7867.7344 8573.1914 -7867.8286 8573.1006 -7867.9233 8573.1484 c-7868.1118 8573.29 -7868.2202 8573.5137 -7868.4258 8573.5625 c-7868.9575 8573.6895 -7869.3535 8573.7334 -7869.8818 8573.7227 c-7870.3047 8573.7129 -7871.4185 8573.7813 -7872.2866 8573.6816 c-7872.6226 8573.6416 -7872.6025 8573.2168 -7872.7695 8573.2129 c-7872.8618 8573.2109 -7872.7646 8573.5264 -7872.8306 8573.5469 c-7873.1694 8573.6533 -7873.4702 8572.5029 -7873.6943 8572.5723 c-7873.8047 8572.6074 -7873.5562 8573.1533 -7873.6729 8573.1816 c-7873.8975 8573.2373 -7874.2178 8572.2188 -7874.4321 8572.2813 c-7874.5635 8572.3184 -7874.2886 8572.7383 -7874.4375 8572.8066 c-7874.6655 8572.9111 -7874.9087 8572.0352 -7875.1064 8572.1338 C-7875.1543 8572.1816 -7874.7295 8572.9375 -7875.1685 8572.8789 c-7875.2871 8572.8613 -7875.5054 8572.3135 -7875.5801 8572.3398 c-7875.6919 8572.3799 -7875.3535 8572.8018 -7875.4897 8572.9277 C-7875.7681 8573.1543 -7876.3711 8572.1631 -7876.4575 8572.2344 c-7876.5791 8572.3359 -7876.1279 8573.0977 -7876.2695 8573.166 C-7876.4497 8573.4297 -7877.0142 8572.5527 -7877.0889 8572.6016 c-7877.1777 8572.6602 -7876.9058 8573.0381 -7876.8799 8573.2334 c-7876.8545 8573.4277 -7876.9966 8573.5615 -7877.2144 8573.5098 c-7877.4736 8573.4473 -7877.8696 8572.6416 -7877.9727 8572.7354 C-7878.0791 8572.791 -7877.8682 8573.0781 -7877.7954 8573.3125 c-7877.7583 8573.4277 -7877.8882 8573.6016 -7878.0298 8573.6016 c-7878.3135 8573.6494 -7878.6255 8572.998 -7878.7065 8573.1025 c-7878.7524 8573.1621 -7878.5898 8573.4902 -7878.7295 8573.5879 c-7878.8994 8573.7061 -7879.3115 8573.2383 -7879.4521 8573.293 C-7879.5361 8573.3418 -7879.4126 8573.5967 -7879.4927 8573.6533 c-7879.7295 8573.8193 -7880.0039 8573.4209 -7880.0513 8573.4688 C-7880.1167 8573.4912 -7880.1201 8573.5361 -7880.2793 8573.6406 c-7880.4736 8573.7676 -7880.5254 8573.8486 -7880.5425 8573.9648 c-7880.5654 8574.083 -7880.3135 8574.375 -7880.1655 8574.3496 c-7879.8223 8574.29 -7879.8662 8574.8496 -7879.6328 8574.7158 c-7879.5679 8574.6797 -7879.6592 8574.2588 -7879.4199 8574.2656 c-7879.0488 8574.2783 -7878.9858 8574.8213 -7878.7817 8574.8105 c-7878.6406 8574.8037 -7878.8521 8574.1836 -7878.6328 8574.2607 c-7878.4751 8574.3164 -7878.0063 8575.3018 -7877.9795 8575.21 c-7877.8975 8574.9424 -7878.0703 8574.3984 -7877.9409 8574.4082 c-7877.7568 8574.4229 -7877.5078 8575.3174 -7877.2544 8575.4375 c-7877.1826 8575.4727 -7877.3774 8574.6006 -7877.1958 8574.5967 C-7877.0898 8574.6465 -7876.7578 8575.4492 -7876.6274 8575.498 C-7876.5591 8575.4824 -7876.5879 8575.125 -7876.5176 8575.1045 c-7876.4688 8575.0898 -7876.2817 8575.5654 -7876.21 8575.5234 c-7876.1055 8575.4629 -7876.2471 8574.9922 -7876.0889 8574.9229 c-7875.9175 8574.8486 -7875.4878 8575.8926 -7875.3486 8575.7979 c-7875.2769 8575.75 -7875.3574 8575.21 -7875.21 8575.2461 c-7875.0718 8575.2783 -7874.9414 8575.6143 -7874.8081 8575.6426 c-7874.7295 8575.6582 -7874.7935 8575.1914 -7874.7495 8575.1738 c-7874.5889 8575.1152 -7874.2329 8575.6719 -7874.0688 8575.5234 c-7873.8584 8575.335 -7873.9395 8574.9697 -7873.8345 8574.9824 c-7873.6274 8575.0059 -7873.4912 8575.2432 -7873.4146 8575.1836 c-7873.2642 8575.0684 -7873.3281 8574.7793 -7873.0527 8574.6924 c-7872.8975 8574.6426 -7872.7935 8574.9346 -7872.7495 8574.9307 c-7872.6738 8574.9277 -7872.6782 8574.8301 -7872.6665 8574.7246 c-7872.6328 8574.4609 -7872.6064 8574.3994 -7872.4878 8574.377 c-7872.0854 8574.3535 -7871.5625 8574.2842 -7871.1807 8574.2754 c-7870.6274 8574.2607 -7869.2607 8574.2373 -7869.1182 8574.2373 c-7869 8574.2129 -7868.7432 8574.3945 -7868.6689 8574.4609 c-7868.4678 8574.6455 -7868.2998 8574.8594 -7867.9858 8575.1201 c-7867.8906 8575.2012 -7867.8081 8575.1807 -7867.7378 8575.1563 c-7867.5249 8575.085 -7867.4585 8575.0332 -7867.2202 8575.002 c-7866.9175 8574.959 -7866.4272 8575.0488 -7866.1245 8575.1426 c-7865.6035 8575.3018 -7865.5264 8575.3242 -7865.0977 8575.2754 c-7864.6992 8575.2295 -7864.0586 8575.1582 -7864.0479 8574.8105 c-7864.0415 8574.5957 -7863.9414 8574.4434 -7863.5742 8574.0117 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 56)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7858.9722 8587 m-7858.9722 8560.9727 L-7885 8560.9727 L-7885 8587 L-7858.9722 8587 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-7867.6455 8573.9893 m-7858.9736 8573.9893 lS-7871.9839 8587 m-7871.9839 8578.3242 lS0.7084 0.636438 0.515526 0.381872 K1.125 w-7867.7202 8569.6504 m-7858.9727 8569.6504 lS-7876.3232 8586.999 m-7876.3232 8577.6455 lS0.64 0.650477 0.701045 0.510735 K-7867.6504 8586.999 m-7867.6504 8584.5869 l-7864.9937 8584.3633 -7863.3096 8582.6602 v-7861.6064 8580.9336 -7861.3774 8578.3281 y-7858.9727 8578.3281 lS*u1 D0 O0.7084 0.636438 0.515526 0.381872 k1 w-7875.8418 8571.1855 m-7875.8418 8571.25 -7875.8218 8571.291 -7875.7783 8571.291 c-7875.6943 8571.291 -7875.4634 8570.9541 -7875.3994 8570.9541 c-7875.3154 8570.9541 -7875.2729 8570.9961 -7875.2729 8571.1016 c-7875.2729 8571.1855 -7875.5264 8572.0928 y-7875.5264 8572.1338 -7875.5264 8572.1338 -7875.5049 8572.1338 c-7875.4414 8572.1338 -7875.0615 8571.5869 -7874.9351 8571.5869 c-7874.9146 8571.5869 -7874.8936 8571.6074 -7874.8936 8571.6289 c-7875.1675 8572.5352 -7875.1675 8572.7256 v-7875.1675 8572.7891 -7875.1675 8572.8105 -7875.1465 8572.8105 c-7875.1055 8572.8105 -7874.6826 8572.2402 -7874.5562 8572.2402 c-7874.5352 8572.2402 -7874.5137 8572.2607 -7874.5137 8572.2822 c-7874.5137 8572.3457 -7874.7666 8573.084 -7874.7666 8573.252 c-7874.7666 8573.2949 -7874.7666 8573.2949 -7874.7446 8573.2949 c-7874.6826 8573.2949 -7874.4722 8573.084 -7874.4297 8573.084 c-7874.4082 8573.084 -7874.3882 8573.1055 -7874.3882 8573.126 c-7874.3882 8573.1465 -7874.4927 8573.5059 -7874.4927 8573.5898 c-7874.4927 8573.6113 -7874.4927 8573.6113 -7874.4722 8573.6113 c-7874.4297 8573.6113 -7874.0918 8573.252 -7874.0078 8573.252 c-7873.9658 8573.252 -7873.9233 8573.2949 -7873.9233 8573.3789 c-7873.9233 8573.5273 -7874.1138 8574.2441 -7874.1138 8574.2861 c-7874.1138 8574.3701 -7874.0918 8574.4121 -7874.0498 8574.4121 c-7873.9658 8574.4121 -7873.7119 8574.0957 -7873.6494 8574.0957 c-7873.5854 8574.0957 -7873.5439 8574.1162 -7873.5439 8574.1807 c-7873.5854 8574.6016 L-7873.5854 8574.666 -7873.5854 8574.6855 -7873.5654 8574.6855 c-7873.5225 8574.6855 -7873.2915 8574.3916 -7873.2065 8574.3916 c-7873.1006 8574.3916 -7873.1006 8574.877 -7873.1006 8574.9395 c-7873.1006 8575.0449 -7873.0166 8575.1289 -7872.8896 8575.1289 c-7872.8057 8575.1289 -7872.4678 8574.8975 -7872.4473 8574.8975 c-7872.3623 8574.8975 -7872.3198 8575.3398 -7872.2568 8575.3398 c-7872.1943 8575.3398 -7871.9199 8575.2129 -7871.8564 8575.2129 c-7871.6455 8575.2129 -7871.6035 8575.2988 -7871.6035 8575.4668 c-7871.6255 8575.6143 L-7871.6255 8575.6563 -7871.6035 8575.6563 -7871.5835 8575.6563 c-7871.4985 8575.6563 -7871.2241 8575.3818 -7871.1392 8575.3818 c-7870.9287 8575.3818 -7868.8198 8577.4492 -7868.5454 8577.7227 c-7868.3984 8577.8906 -7868.3984 8578.1865 -7868.3984 8578.3135 c-7868.3984 8579.1777 -7868.3984 8579.2617 -7868.2295 8579.3457 c-7867.5977 8579.5996 -7867.5127 8579.7471 -7866.7334 8581.0332 c-7866.6479 8581.1807 -7865.7407 8581.793 -7865.5942 8581.793 c-7865.4878 8581.793 -7865.1094 8581.5391 -7865.0239 8581.5391 c-7864.9194 8581.5391 -7864.8135 8581.6025 -7864.8135 8581.7705 c-7864.8135 8582.2139 -7865.3408 8582.7207 -7865.9312 8582.7207 c-7866.7534 8582.7207 -7867.0913 8582.0234 -7867.1338 8581.625 c-7867.1543 8581.4766 -7867.2393 8581.3916 -7867.3447 8581.3916 c-7867.3862 8581.3916 -7867.4287 8581.4121 -7867.4702 8581.4766 c-7867.9561 8582.2773 -7868.9473 8582.7207 -7869.7065 8582.7207 c-7870.7393 8582.7207 -7871.8774 8582.0879 -7872.3418 8581.8145 c-7872.7842 8581.5615 -7873.4814 8581.3916 -7873.8809 8581.3916 c-7874.3242 8581.3916 -7874.3662 8581.5391 -7874.3662 8581.793 c-7874.3662 8581.9404 -7873.9023 8582.3818 -7873.9023 8582.5098 c-7873.9023 8582.6357 -7874.0498 8582.7207 -7874.4082 8582.7207 c-7874.8936 8582.7207 -7875.5679 8582.0029 -7875.5679 8581.2236 c-7875.5679 8580.6113 -7874.7666 8580.085 -7874.3022 8580.085 c-7873.3755 8580.085 -7873.0942 8580.4434 -7872.5264 8580.9072 c-7872.4414 8580.9697 -7872.3774 8580.9922 -7872.3359 8580.9922 c-7872.1895 8580.9922 -7872.1895 8579.8945 -7872.1895 8579.7695 c-7872.1895 8579.6201 -7872.2729 8579.5576 -7872.3774 8579.5576 c-7874.7822 8579.5576 -7879.6592 8578.334 -7881.3672 8572.1777 c-7881.4297 8571.9658 -7881.5361 8571.8613 -7881.6406 8571.8613 c-7881.7881 8571.8613 -7882.7793 8572.7041 -7882.7793 8574.2861 c-7882.7793 8576.1201 -7881.5767 8577.0898 -7880.9873 8577.0898 c-7880.8398 8577.0898 -7880.6494 8577.0693 -7880.6494 8576.9209 c-7880.6494 8576.8584 -7880.6929 8576.7949 -7880.7759 8576.6895 c-7881.1143 8576.3535 -7881.3672 8575.7197 -7881.3672 8575.4033 c-7881.3672 8575.1914 -7881.2607 8575.0234 -7881.1143 8575.0234 c-7880.9033 8575.0234 -7880.5654 8575.9727 -7880.46 8576.1201 c-7880.3335 8576.3311 -7879.9546 8576.7109 -7879.2378 8577.2383 c-7878.4995 8577.7637 -7877.0654 8579.0723 -7877.0654 8580.3369 c-7877.0654 8581.709 -7878.1191 8582.6152 -7878.9209 8582.6152 c-7879.7007 8582.6152 -7880.6714 8582.0879 -7881.0713 8581.6025 c-7881.7041 8580.8652 -7882.3154 8580.2949 -7882.8218 8580.2949 c-7883.1592 8580.2949 -7883.3066 8580.5059 -7883.3066 8580.7168 c-7883.3066 8581.0537 -7883.0537 8581.2861 -7882.5479 8581.3281 c-7881.9575 8581.3711 -7881.8936 8581.793 -7881.8936 8582.1289 c-7881.8936 8582.4033 -7882.4209 8582.7207 -7882.8433 8582.7207 c-7883.4751 8582.7207 -7884.2974 8582.0234 -7884.2974 8580.1904 c-7884.2974 8578.6924 -7883.0537 8578.2295 -7882.5679 8578.2295 c-7882.1265 8578.2295 -7881.4722 8578.3135 -7881.0928 8578.6504 c-7879.8066 8579.8535 -7879.1318 8580.0625 -7878.5835 8580.0625 c-7878.3721 8580.0625 -7878.2881 8580.0625 -7878.2881 8580.2109 c-7878.2881 8580.5273 -7879.0474 8580.7168 -7879.1318 8580.7383 c-7879.3423 8580.8008 -7879.5103 8581.0332 -7879.5103 8581.2441 c-7879.5103 8581.7295 -7879.2378 8581.75 -7878.8774 8581.75 c-7878.5215 8581.75 -7877.8042 8581.3916 -7877.8042 8580.1904 c-7877.8042 8579.1992 -7878.9424 8578.0391 -7879.4058 8577.8076 c-7879.7007 8577.6377 -7880.5874 8577.6602 -7880.9458 8577.6172 c-7881.6406 8577.5322 -7883.4121 8576.585 -7883.4121 8574.0957 c-7883.4336 8572.6826 -7882.1265 8571.3555 -7881.8511 8571.166 c-7881.6826 8571.0586 -7881.5986 8570.9326 -7881.5986 8570.7637 c-7881.5986 8570.5527 -7881.6626 8567.6221 -7881.9995 8567.6221 c-7882.4424 8567.6221 -7882.5054 8567.6221 -7882.5054 8567.8135 c-7882.21 8568.9082 -7882.21 8569.1406 v-7882.21 8569.457 -7882.4424 8570.9326 -7883.3066 8570.9326 c-7883.5806 8570.9326 -7884.0449 8570.7002 -7884.0449 8570.3848 c-7884.0449 8570.0898 -7883.3486 8568.8877 -7883.3486 8568.6133 c-7883.3486 8568.1279 -7883.3921 8568.1074 -7884.0654 8567.4961 c-7884.2559 8567.3486 -7884.3193 8567.2227 -7884.3193 8567.0313 c-7884.3193 8566.8633 -7884.2134 8566.7354 -7884.0449 8566.7354 c-7883.8975 8566.7354 -7883.3281 8567.0117 -7883.2017 8567.0313 c-7883.0752 8567.0313 -7882.8433 8567.0527 -7882.6538 8567.0527 c-7882.2734 8567.0527 -7882.0845 8566.9258 -7882.0845 8566.7998 c-7882.0845 8566.5674 -7882.0845 8565.8936 -7882.9263 8564.4375 c-7883.1167 8564.1006 -7884.2974 8562.7725 -7884.2974 8562.4346 c-7884.2974 8562.2656 -7884.2134 8562.2461 -7884.1089 8562.2461 c-7883.9185 8562.2461 -7883.4966 8562.667 -7883.3706 8562.8145 c-7882.1265 8564.1426 -7881.3042 8565.5762 -7880.9238 8566.8418 c-7880.8398 8567.1582 -7880.7344 8567.0742 -7880.5654 8567.0957 c-7878.4155 8567.6016 -7876.3271 8570.1104 -7876.3271 8570.1318 c-7876.4326 8570.4053 -7876.4326 8570.4688 v-7876.4326 8570.5957 -7876.3271 8570.6172 -7876.3057 8570.6172 c-7876.2432 8570.6172 -7876.0527 8570.4053 -7876.0103 8570.4053 c-7875.9058 8570.4053 -7875.7783 8570.4902 -7875.7783 8570.6377 C-7875.8418 8571.1855 lf0 D-7879.1104 8569.6895 m-7878.5215 8569.6895 -7878.0986 8569.7949 -7877.6982 8570.0684 c-7877.6553 8570.0898 -7877.6138 8570.1104 -7877.5928 8570.1104 c-7877.5498 8570.1104 -7877.5498 8570.0898 -7877.5498 8570.0469 c-7877.5498 8569.626 -7879.4272 8567.666 -7880.5654 8567.666 c-7880.6289 8567.666 -7880.6714 8567.707 -7880.6714 8567.7695 c-7880.6714 8567.96 -7880.5874 8569.9629 -7880.2495 8569.9629 c-7880.1865 8569.9629 -7880.1016 8569.9414 -7880.0386 8569.9004 c-7879.7007 8569.752 -7879.4902 8569.6895 -7879.1104 8569.6895 cf-7878.5835 8572.4512 m-7878.5835 8572.0293 -7878.5625 8571.5654 -7877.8662 8571.5654 c-7877.2334 8571.5654 -7876.6431 8572.2197 -7876.4961 8572.3672 c-7876.4326 8572.4092 -7876.3906 8572.4297 -7876.3486 8572.4297 c-7876.3271 8572.4297 -7876.2847 8572.3877 -7876.2847 8572.3457 c-7876.2847 8571.9023 -7877.6553 8570.2373 -7879.0049 8570.2373 c-7879.2578 8570.2373 -7880.2705 8570.4053 -7880.2705 8570.9541 c-7880.2705 8571.207 -7879.8906 8572.5781 -7879.2793 8573.6533 c-7877.9087 8576.1416 -7873.7119 8577.7002 -7871.8145 8577.7002 c-7870.9072 8577.7227 -7870.6118 8577.4063 -7870.4863 8577.3848 c-7870.4648 8577.3848 -7870.4438 8577.3643 -7870.4233 8577.3643 c-7870.3174 8577.3643 -7870.1904 8577.4277 -7870.1904 8577.5752 c-7870.1904 8577.5967 -7870.2119 8577.5967 v-7870.3594 8578.7344 -7870.4014 8579.1357 -7870.4014 8580.3994 c-7870.4014 8581.793 -7870.4014 8581.9189 -7869.4321 8581.9189 c-7868.1455 8581.9189 -7867.8506 8580.8438 -7867.8506 8580.6113 c-7867.8506 8580.1904 -7868.4399 8579.8945 -7868.5889 8579.8945 c-7868.7358 8579.8945 -7868.9058 8580.002 -7868.9058 8580.1904 c-7868.9058 8580.4854 -7868.9473 8580.6328 -7869.2207 8580.6328 c-7869.4951 8580.6328 -7869.4951 8580.2744 -7869.4951 8580.168 c-7869.4951 8579.916 -7869.3896 8579.6631 -7869.1782 8579.5361 c-7868.7998 8579.2832 -7868.7998 8578.8828 -7868.7998 8578.6719 c-7868.7998 8578.5664 -7868.7998 8578.4395 -7868.8198 8578.334 c-7868.8418 8578.166 -7870.7817 8576.1201 -7871.0977 8576.1201 c-7871.2446 8576.1201 -7871.5615 8576.2666 -7872.4258 8576.2666 c-7874.5767 8576.2666 -7875.5474 8574.5391 -7875.7378 8574.0117 c-7875.9897 8573.2949 -7876.7915 8572.999 -7877.0225 8572.999 c-7877.2129 8572.999 -7877.2129 8573.042 -7877.2129 8573.4424 c-7877.2129 8573.5273 -7877.4238 8573.8633 y-7877.4238 8574.0537 -7876.3906 8574.3066 -7876.3906 8574.4961 c-7876.3906 8574.666 -7876.5801 8574.6855 -7876.7271 8574.6855 c-7876.8115 8574.6855 -7877.8882 8574.6855 -7878.3306 8573.8633 c-7878.5415 8573.4629 -7878.5835 8572.8945 -7878.5835 8572.4512 cf1 D-7874.4927 8570.1953 m-7874.4927 8570.1514 -7874.5137 8570.1318 -7874.5352 8570.1318 c-7874.5986 8570.1318 -7874.7666 8570.4688 -7874.8506 8570.4688 c-7874.9146 8570.4688 -7874.9995 8570.3848 -7875.0415 8570.2783 c-7875.0615 8570.1953 -7875.1255 8569.7305 -7875.21 8569.7305 c-7875.2524 8569.7305 -7875.4209 8569.9629 -7875.4634 8569.9629 c-7875.6104 8569.9629 -7875.7158 8569.7305 -7875.7158 8569.5215 c-7875.7158 8569.415 -7875.7783 8569.415 -7875.9263 8569.415 c-7876.5166 8569.415 -7878.1406 8567.2432 -7878.5625 8565.4922 c-7878.6055 8565.3242 -7878.5835 8565.1768 -7878.8994 8565.0703 c-7881.0713 8564.334 -7883.5176 8562.1816 -7883.5176 8562.0557 c-7883.5176 8561.9082 -7883.4336 8561.8242 -7883.3066 8561.8242 c-7883.2432 8561.8242 -7883.1592 8561.8242 -7882.6538 8562.1602 c-7881.7681 8562.751 -7879.7217 8564.0381 -7878.8994 8564.0381 c-7878.6265 8564.0381 -7878.6055 8563.6797 -7878.6055 8563.4258 c-7878.6055 8563.2354 -7878.6265 8563.0039 -7878.6265 8562.8574 c-7878.6465 8562.583 -7878.9634 8562.2656 -7878.9634 8562.0977 c-7878.9634 8561.9502 -7878.8154 8561.8447 -7878.6465 8561.8447 c-7878.4575 8561.8447 -7878.3306 8561.8662 -7878.1606 8562.0557 c-7877.8662 8562.3926 -7877.7402 8562.541 -7877.4238 8562.541 c-7877.1914 8562.541 -7876.1377 8561.8242 -7875.8838 8561.8242 c-7875.5679 8561.8242 -7875.1895 8562.3086 -7875.1895 8562.6045 c-7875.1895 8563.3418 -7876.0942 8563.9326 -7876.6431 8563.9326 c-7877.0225 8563.9326 -7877.4438 8563.8066 -7877.6353 8563.5742 c-7877.6982 8563.5098 -7877.7607 8563.4688 -7877.8242 8563.4688 c-7877.9937 8563.4688 -7878.1191 8563.9326 -7878.1191 8563.9746 c-7878.1191 8564.3975 -7875.2729 8564.459 -7874.9146 8564.459 c-7874.7666 8564.459 -7874.6401 8564.375 -7874.5352 8564.2061 c-7874.3447 8563.9121 -7873.1855 8562.6895 -7871.6255 8562.6895 c-7869.79 8562.6895 -7868.0825 8563.9521 -7868.0825 8565.8506 c-7868.0825 8565.957 -7868.1245 8566.5039 -7868.1245 8566.5264 c-7868.1245 8566.5898 -7867.0063 8568.3389 -7865.6782 8568.3389 c-7864.6245 8568.3389 -7864.2656 8567.75 -7864.2656 8567.2637 c-7864.2656 8567.0313 -7864.3711 8566.3789 -7864.8984 8566.3789 c-7865.1094 8566.3789 -7865.2144 8566.5898 -7865.2144 8566.9688 c-7865.2144 8567.0527 -7865.0039 8567.4326 -7865.0039 8567.5381 c-7865.0039 8567.5801 -7865.0239 8567.6016 -7865.0879 8567.6016 c-7865.4258 8567.6016 -7865.9521 8567.2432 -7866.1846 8566.5898 c-7866.4595 8565.873 -7866.8594 8565.1768 -7867.1958 8564.7754 c-7867.5127 8564.418 -7867.6182 8563.8262 -7867.6182 8563.4893 c-7867.6182 8563.0039 -7867.1338 8561.8447 -7865.4878 8561.8447 c-7864.2871 8561.8447 -7863.4434 8562.583 -7863.4434 8563.1943 c-7863.4434 8563.8066 -7863.7598 8564.1855 -7864.2026 8564.1855 c-7864.6455 8564.1855 -7864.9824 8563.8477 -7864.9824 8563.5098 c-7864.9824 8562.8359 -7865.1514 8562.6895 -7865.4878 8562.6895 c-7865.6992 8562.6895 -7865.8896 8562.8145 -7865.8896 8563.1309 c-7865.8896 8563.3633 -7865.8896 8563.7422 -7864.3711 8565.0078 c-7863.8857 8565.4082 -7863.4214 8566.1055 -7863.4214 8566.8848 c-7863.4214 8567.6445 -7864.4561 8568.8447 -7865.6362 8568.8447 c-7866.8594 8568.8447 -7867.6401 8568.0654 -7868.2515 8567.3486 c-7868.5454 8567.0117 -7869.9814 8565.3242 -7870.0439 8565.3018 c-7870.2334 8565.1543 -7870.3174 8565.0293 -7870.3174 8564.9023 c-7870.3174 8564.7969 -7870.2119 8564.6914 -7870.0854 8564.6914 c-7869.8535 8564.6914 -7868.9058 8565.6406 -7868.8198 8565.6406 c-7868.7568 8565.6406 -7868.7153 8565.5762 -7868.7153 8565.4922 c-7868.7153 8564.7334 -7869.8535 8563.2578 -7871.6255 8563.2578 c-7873.1006 8563.2578 -7873.9863 8564.375 -7873.9863 8564.418 c-7873.9863 8564.5439 -7873.8394 8564.6689 -7873.5225 8564.7334 c-7869.6426 8565.4717 -7866.3955 8569.0215 -7866.3955 8573.6377 c-7866.3955 8573.7441 -7866.2256 8573.7705 -7866.0786 8573.7705 c-7865.7202 8573.7705 -7865.0879 8573.8496 -7865.0879 8573.5762 c-7865.0879 8573.4697 -7865.1294 8573.3438 -7865.1934 8573.2168 c-7865.5518 8572.6465 -7865.8682 8572.4727 -7865.8682 8571.5215 c-7865.8682 8571.0586 -7865.4878 8570.5322 -7864.8984 8570.5322 c-7863.8657 8570.5322 -7863.4214 8571.5654 -7863.4214 8571.7969 c-7863.4214 8571.9658 -7863.5073 8572.0293 -7863.5903 8572.0293 c-7863.7178 8572.0293 -7864.2241 8571.502 -7864.3711 8571.502 c-7864.5615 8571.502 -7864.7085 8571.5439 -7864.7085 8572.0293 c-7864.7085 8572.3672 -7863.4214 8576.0781 -7863.4214 8576.8789 c-7863.4214 8577.4492 -7863.7598 8578.1455 -7864.6455 8578.6504 c-7864.6875 8578.6719 -7864.7085 8578.6924 -7864.7085 8578.7344 c-7864.7085 8578.8184 -7864.5615 8578.9248 -7864.4126 8578.9658 c-7863.8018 8579.1357 -7863.4214 8579.2412 -7863.4214 8580.1904 c-7863.4214 8580.5488 -7863.7598 8581.2236 -7864.0127 8581.2236 c-7864.2026 8581.2236 -7864.2026 8581.1807 -7864.2026 8580.8223 c-7864.2026 8580.6748 -7864.2446 8580.5693 -7864.3926 8580.4639 c-7864.7085 8580.2529 -7864.7295 8580.2109 -7864.8135 8579.7266 c-7864.8774 8579.4102 -7865.0039 8579.3242 -7866.1426 8578.6924 c-7866.5854 8578.4189 -7866.6904 8578.1865 -7866.7744 8577.9551 c-7866.8594 8577.7637 -7866.9233 8577.7637 -7867.4287 8577.7637 c-7867.9561 8577.7637 -7870.5073 8575.0449 -7870.5073 8574.918 c-7870.5073 8574.8555 -7870.3809 8574.5596 -7870.3809 8574.4961 c-7870.3809 8574.4336 -7870.4014 8574.3916 -7870.4438 8574.3916 c-7870.4863 8574.3916 -7870.6338 8574.6016 -7870.6758 8574.6016 c-7870.7817 8574.6016 -7870.7817 8574.4121 -7870.7817 8574.2637 c-7870.7817 8574.1602 -7870.5703 8573.5898 -7870.5703 8573.4424 c-7870.5703 8573.3584 -7870.5918 8573.2949 -7870.6338 8573.2949 c-7870.7178 8573.2949 -7870.9072 8573.7578 -7870.9922 8573.7578 c-7871.0342 8573.7578 -7871.0762 8573.7168 -7871.0762 8573.5898 c-7871.0762 8573.4424 -7870.8862 8572.7256 y-7870.8862 8572.6621 -7870.9072 8572.5566 -7870.9502 8572.5566 c-7871.0342 8572.5566 -7871.1826 8572.957 -7871.2666 8572.957 c-7871.3286 8572.957 -7871.3926 8572.873 -7871.3926 8572.7256 c-7871.3926 8572.6406 -7871.2446 8572.2197 -7871.2446 8572.1143 c-7871.2446 8572.0508 -7871.2666 8571.9863 -7871.3086 8571.9863 c-7871.3506 8571.9863 -7871.5835 8572.5996 -7871.7095 8572.5996 c-7871.7935 8572.5996 -7871.8994 8572.4922 -7871.8994 8572.3877 c-7871.8994 8572.3037 -7871.7729 8571.9453 -7871.7729 8571.8613 c-7871.7729 8571.8184 -7871.7729 8571.7969 -7871.7935 8571.7969 c-7871.8774 8571.7969 -7872.0254 8572.2822 -7872.1104 8572.2822 c-7872.3418 8572.2822 -7872.3623 8571.8613 -7872.3623 8571.6709 c-7872.3623 8571.5869 -7872.2998 8571.25 -7872.2998 8571.1855 c-7872.2998 8571.123 -7872.3198 8571.1016 -7872.3418 8571.1016 c-7872.4897 8571.1016 -7872.6782 8571.9023 -7872.8271 8571.9023 c-7873.0386 8571.9023 -7873.0386 8571.7129 -7873.0386 8571.4814 c-7873.0166 8570.9541 L-7873.0166 8570.9326 -7873.0386 8570.9121 y-7873.0586 8570.9121 -7873.1006 8570.9326 -7873.1226 8570.9961 c-7873.1855 8571.207 -7873.3115 8571.6289 -7873.5225 8571.6289 c-7873.6694 8571.6289 -7873.8174 8571.46 -7873.8174 8571.3135 c-7873.8174 8571.0801 -7873.7119 8570.7002 -7873.7119 8570.4688 c-7873.7119 8570.4053 -7873.7334 8570.3848 -7873.7754 8570.3848 c-7873.8608 8570.3848 -7873.9863 8570.8262 -7874.0278 8570.9121 c-7874.0918 8570.9961 -7874.1553 8571.0176 -7874.2192 8571.0176 c-7874.5352 8571.0176 -7874.5352 8570.7002 -7874.5352 8570.5527 C-7874.4927 8570.1953 lf0 D-7875.8633 8565.8301 m-7875.8633 8565.5977 -7877.8042 8565.4082 -7877.8662 8565.4082 c-7877.9722 8565.4082 -7878.0352 8565.4717 -7878.0352 8565.5762 c-7878.0352 8566.4414 -7876.2847 8568.6768 -7875.8633 8568.6768 c-7875.7998 8568.6768 -7875.7783 8568.6563 -7875.7783 8568.5928 c-7876.2002 8567.3486 -7876.2002 8567.0957 v-7876.2002 8566.7158 -7876.0942 8566.4629 -7875.9058 8566.041 c-7875.8838 8565.957 -7875.8633 8565.8936 -7875.8633 8565.8301 cf-7867.1338 8577.2793 m-7866.9858 8577.2793 -7866.4795 8576.7744 -7866.3325 8576.7744 c-7866.2065 8576.7744 -7866.0791 8576.8584 -7866.0791 8577.0059 c-7866.0791 8577.0898 -7866.2695 8577.5322 -7866.2695 8577.6377 c-7866.2695 8577.9961 -7865.8896 8578.293 -7865.5098 8578.293 c-7865.1094 8578.293 -7863.9702 8577.9756 -7863.9702 8576.752 c-7863.9702 8575.6563 -7864.3926 8575.6563 -7866.0366 8575.6563 c-7866.3955 8575.6563 -7868.0615 8575.8457 -7868.3145 8575.8457 c-7868.4399 8575.8457 -7868.4834 8575.6768 -7868.4834 8575.5498 c-7868.4834 8575.5088 -7868.4834 8575.4668 -7868.4614 8575.4453 c-7868.3984 8575.0664 -7868.1675 8574.5176 -7868.1675 8574.1377 c-7868.1675 8569.6895 -7872.2998 8565.8301 -7874.7666 8565.8301 c-7875.4209 8565.8301 -7875.6519 8566.6318 -7875.6519 8567.0527 c-7875.6519 8568.7822 -7873.6694 8569.8145 -7873.4175 8569.8145 c-7873.3545 8569.8145 -7873.3335 8569.7949 -7873.3335 8569.752 c-7873.3335 8569.71 -7873.3545 8569.668 -7873.3975 8569.626 c-7873.5225 8569.457 -7874.0498 8568.8447 -7874.0498 8568.2129 c-7874.0498 8567.875 -7873.7554 8567.4326 -7872.9951 8567.4326 c-7871.7305 8567.4326 -7871.1826 8568.7822 -7871.1826 8569.1406 c-7871.1826 8569.2891 -7871.2446 8569.499 -7871.4561 8569.499 c-7871.6035 8569.499 -7872.0049 8568.8447 -7872.1519 8568.8447 c-7872.2158 8568.8447 -7872.4473 8568.9717 -7872.5103 8568.9717 c-7872.5942 8568.9717 -7872.6582 8568.9512 -7872.7422 8568.9512 c-7872.8057 8568.9512 -7872.8481 8569.0137 -7872.8481 8569.1191 c-7872.8481 8569.4785 -7872.3623 8570.0469 -7871.8774 8570.3008 c-7870.9722 8570.7637 -7869.6226 8572.0928 -7869.6226 8573.5479 c-7869.6226 8573.9688 -7869.6846 8574.3701 -7869.6846 8574.707 c-7869.6846 8575.2559 -7868.7568 8576.1201 -7867.8081 8577.0059 c-7867.6401 8577.1533 -7867.3862 8577.2793 -7867.1338 8577.2793 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 57)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7858.9722 8587 m-7858.9722 8560.9727 L-7885 8560.9727 L-7885 8587 L-7858.9722 8587 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-7867.6455 8573.9893 m-7858.9736 8573.9893 lS-7871.9839 8587 m-7871.9839 8578.3242 lS0.64 0.650477 0.701045 0.510735 K1.125 w-7867.7202 8569.6504 m-7858.9727 8569.6504 lS-7876.3232 8587 m-7876.3232 8577.6455 lS0.7084 0.636438 0.515526 0.381872 K-7867.6504 8587 m-7867.6504 8584.5869 l-7864.9937 8584.3633 -7863.3096 8582.6602 v-7861.6064 8580.9336 -7861.3774 8578.3281 y-7858.9727 8578.3281 lS*u0 O0.7084 0.636438 0.515526 0.381872 k1 w-7875.7783 8570.6377 m-7875.7783 8570.4902 -7875.9058 8570.4053 -7876.0103 8570.4053 c-7876.0527 8570.4053 -7876.2432 8570.6172 -7876.3057 8570.6172 c-7876.3271 8570.6172 -7876.4326 8570.5957 -7876.4326 8570.4688 c-7876.4326 8570.4053 -7876.3271 8570.1318 y-7876.3271 8570.1104 -7878.4155 8567.6016 -7880.5654 8567.0957 c-7880.7344 8567.0742 -7880.8398 8567.1582 -7880.9238 8566.8418 c-7881.3042 8565.5762 -7882.1265 8564.1426 -7883.3706 8562.8145 c-7883.4966 8562.668 -7883.9185 8562.2461 -7884.1089 8562.2461 c-7884.2134 8562.2461 -7884.2974 8562.2656 -7884.2974 8562.4346 c-7884.2974 8562.7725 -7883.1167 8564.1006 -7882.9263 8564.4375 c-7882.0845 8565.8936 -7882.0845 8566.5674 -7882.0845 8566.7998 c-7882.0845 8566.9258 -7882.2734 8567.0527 -7882.6538 8567.0527 c-7882.8433 8567.0527 -7883.0752 8567.0313 -7883.2017 8567.0313 c-7883.3281 8567.0117 -7883.8975 8566.7354 -7884.0449 8566.7354 c-7884.2134 8566.7354 -7884.3193 8566.8633 -7884.3193 8567.0313 c-7884.3193 8567.2227 -7884.2559 8567.3486 -7884.0654 8567.4961 c-7883.3921 8568.1074 -7883.3486 8568.1279 -7883.3486 8568.6133 c-7883.3486 8568.8877 -7884.0449 8570.0898 -7884.0449 8570.3848 c-7884.0449 8570.7002 -7883.5806 8570.9326 -7883.3066 8570.9326 c-7882.4424 8570.9326 -7882.21 8569.457 -7882.21 8569.1406 c-7882.21 8568.9082 -7882.5054 8567.8135 y-7882.5054 8567.6221 -7882.4424 8567.6221 -7881.9995 8567.6221 c-7881.6626 8567.6221 -7881.5986 8570.5527 -7881.5986 8570.7637 c-7881.5986 8570.9326 -7881.6826 8571.0586 -7881.8511 8571.166 c-7882.1265 8571.3555 -7883.4336 8572.6826 -7883.4121 8574.0957 c-7883.4121 8576.585 -7881.6406 8577.5322 -7880.9458 8577.6172 c-7880.5874 8577.6602 -7879.7007 8577.6377 -7879.4058 8577.8076 c-7878.9424 8578.0391 -7877.8042 8579.1992 -7877.8042 8580.1904 c-7877.8042 8581.3916 -7878.5215 8581.75 -7878.8774 8581.75 c-7879.2378 8581.75 -7879.5103 8581.7295 -7879.5103 8581.2441 c-7879.5103 8581.0332 -7879.3423 8580.8008 -7879.1318 8580.7383 c-7879.0474 8580.7168 -7878.2881 8580.5273 -7878.2881 8580.2109 c-7878.2881 8580.0625 -7878.3721 8580.0625 -7878.5835 8580.0625 c-7879.1318 8580.0625 -7879.8066 8579.8535 -7881.0928 8578.6504 c-7881.4722 8578.3135 -7882.1265 8578.2295 -7882.5679 8578.2295 c-7883.0537 8578.2295 -7884.2974 8578.6924 -7884.2974 8580.1904 c-7884.2974 8582.0234 -7883.4751 8582.7207 -7882.8433 8582.7207 c-7882.4209 8582.7207 -7881.8936 8582.4033 -7881.8936 8582.1289 c-7881.8936 8581.793 -7881.9575 8581.3711 -7882.5479 8581.3281 c-7883.0537 8581.2861 -7883.3066 8581.0537 -7883.3066 8580.7168 c-7883.3066 8580.5059 -7883.1592 8580.2949 -7882.8218 8580.2949 c-7882.3154 8580.2949 -7881.7041 8580.8652 -7881.0713 8581.6025 c-7880.6714 8582.0879 -7879.7007 8582.6152 -7878.9209 8582.6152 c-7878.1191 8582.6152 -7877.0654 8581.709 -7877.0654 8580.3369 c-7877.0654 8579.0723 -7878.4995 8577.7637 -7879.2378 8577.2383 c-7879.9546 8576.7109 -7880.3335 8576.3311 -7880.46 8576.1201 c-7880.5654 8575.9727 -7880.9033 8575.0234 -7881.1143 8575.0234 c-7881.2607 8575.0234 -7881.3672 8575.1914 -7881.3672 8575.4033 c-7881.3672 8575.7197 -7881.1143 8576.3535 -7880.7759 8576.6895 c-7880.6929 8576.7949 -7880.6494 8576.8584 -7880.6494 8576.9209 c-7880.6494 8577.0693 -7880.8398 8577.0898 -7880.9873 8577.0898 c-7881.5767 8577.0898 -7882.7793 8576.1201 -7882.7793 8574.2861 c-7882.7793 8572.7041 -7881.7881 8571.8613 -7881.6406 8571.8613 c-7881.5361 8571.8613 -7881.4297 8571.9658 -7881.3672 8572.1777 c-7879.6592 8578.334 -7874.7822 8579.5576 -7872.3774 8579.5576 c-7872.2729 8579.5576 -7872.1895 8579.6201 -7872.1895 8579.7695 c-7872.1895 8579.8945 -7872.1895 8580.9922 -7872.3359 8580.9922 c-7872.3774 8580.9922 -7872.4414 8580.9697 -7872.5264 8580.9072 c-7873.0942 8580.4434 -7873.3755 8580.085 -7874.3022 8580.085 c-7874.7666 8580.085 -7875.5679 8580.6113 -7875.5679 8581.2236 c-7875.5679 8582.0029 -7874.8936 8582.7207 -7874.4082 8582.7207 c-7874.0498 8582.7207 -7873.9023 8582.6357 -7873.9023 8582.5098 c-7873.9023 8582.3818 -7874.3662 8581.9404 -7874.3662 8581.793 c-7874.3662 8581.5391 -7874.3242 8581.3916 -7873.8809 8581.3916 c-7873.4814 8581.3916 -7872.7842 8581.5615 -7872.3418 8581.8145 c-7871.8774 8582.0879 -7870.7393 8582.7207 -7869.7065 8582.7207 c-7868.9473 8582.7207 -7867.9561 8582.2773 -7867.4702 8581.4766 c-7867.4287 8581.4121 -7867.3862 8581.3916 -7867.3447 8581.3916 c-7867.2393 8581.3916 -7867.1543 8581.4766 -7867.1338 8581.625 c-7867.0913 8582.0234 -7866.7534 8582.7207 -7865.9312 8582.7207 c-7865.3408 8582.7207 -7864.8135 8582.2139 -7864.8135 8581.7705 c-7864.8135 8581.6025 -7864.9194 8581.5391 -7865.0239 8581.5391 c-7865.1094 8581.5391 -7865.4878 8581.793 -7865.5942 8581.793 c-7865.7407 8581.793 -7866.6479 8581.1807 -7866.7334 8581.0332 c-7867.5127 8579.7471 -7867.5977 8579.5996 -7868.2295 8579.3457 c-7868.3984 8579.2617 -7868.3984 8579.1777 -7868.3984 8578.3135 c-7868.3984 8578.1865 -7868.3984 8577.8906 -7868.5454 8577.7227 c-7868.8198 8577.4492 -7870.9287 8575.3818 -7871.1392 8575.3818 c-7871.2241 8575.3818 -7871.4985 8575.6563 -7871.5835 8575.6563 c-7871.6035 8575.6563 -7871.6255 8575.6563 -7871.6255 8575.6143 C-7871.6035 8575.4668 l-7871.6035 8575.2988 -7871.6455 8575.2129 -7871.8564 8575.2129 c-7871.9199 8575.2129 -7872.1943 8575.3398 -7872.2568 8575.3398 c-7872.3198 8575.3398 -7872.3623 8574.8975 -7872.4473 8574.8975 c-7872.4678 8574.8975 -7872.8057 8575.1289 -7872.8896 8575.1289 c-7873.0166 8575.1289 -7873.1006 8575.0449 -7873.1006 8574.9395 c-7873.1006 8574.877 -7873.1006 8574.3916 -7873.2065 8574.3916 c-7873.2915 8574.3916 -7873.5225 8574.6855 -7873.5654 8574.6855 c-7873.5854 8574.6855 -7873.5854 8574.666 -7873.5854 8574.6016 C-7873.5439 8574.1807 l-7873.5439 8574.1162 -7873.5854 8574.0957 -7873.6494 8574.0957 c-7873.7119 8574.0957 -7873.9658 8574.4121 -7874.0498 8574.4121 c-7874.0918 8574.4121 -7874.1138 8574.3701 -7874.1138 8574.2861 c-7874.1138 8574.2441 -7873.9233 8573.5273 -7873.9233 8573.3789 c-7873.9233 8573.2949 -7873.9658 8573.252 -7874.0078 8573.252 c-7874.0918 8573.252 -7874.4297 8573.6113 -7874.4722 8573.6113 c-7874.4927 8573.6113 -7874.4927 8573.6113 -7874.4927 8573.5898 c-7874.4927 8573.5059 -7874.3882 8573.1465 -7874.3882 8573.127 c-7874.3882 8573.1055 -7874.4082 8573.084 -7874.4297 8573.084 c-7874.4722 8573.084 -7874.6826 8573.2949 -7874.7446 8573.2949 c-7874.7666 8573.2949 -7874.7666 8573.2949 -7874.7666 8573.252 c-7874.7666 8573.084 -7874.5137 8572.3457 -7874.5137 8572.2822 c-7874.5137 8572.2607 -7874.5352 8572.2402 -7874.5562 8572.2402 c-7874.6826 8572.2402 -7875.1055 8572.8105 -7875.1465 8572.8105 c-7875.1675 8572.8105 -7875.1675 8572.7891 -7875.1675 8572.7256 c-7875.1675 8572.5352 -7874.8936 8571.6289 y-7874.8936 8571.6074 -7874.9146 8571.5869 -7874.9351 8571.5869 c-7875.0615 8571.5869 -7875.4414 8572.1338 -7875.5049 8572.1338 c-7875.5264 8572.1338 -7875.5264 8572.1338 -7875.5264 8572.0928 c-7875.2729 8571.1855 -7875.2729 8571.1016 v-7875.2729 8570.9961 -7875.3154 8570.9541 -7875.3994 8570.9541 c-7875.4634 8570.9541 -7875.6943 8571.291 -7875.7783 8571.291 c-7875.8218 8571.291 -7875.8418 8571.25 -7875.8418 8571.1855 c-7875.7783 8570.6377 Lf1 D-7880.0386 8569.9004 m-7880.1016 8569.9414 -7880.1865 8569.9629 -7880.2495 8569.9629 c-7880.5874 8569.9629 -7880.6714 8567.96 -7880.6714 8567.7695 c-7880.6714 8567.707 -7880.6289 8567.666 -7880.5654 8567.666 c-7879.4272 8567.666 -7877.5498 8569.627 -7877.5498 8570.0469 c-7877.5498 8570.0898 -7877.5498 8570.1104 -7877.5928 8570.1104 c-7877.6138 8570.1104 -7877.6553 8570.0898 -7877.6982 8570.0684 c-7878.0986 8569.7949 -7878.5215 8569.6895 -7879.1104 8569.6895 c-7879.4902 8569.6895 -7879.7007 8569.752 -7880.0386 8569.9004 cf-7878.3306 8573.8633 m-7877.8882 8574.6855 -7876.8115 8574.6855 -7876.7271 8574.6855 c-7876.5801 8574.6855 -7876.3906 8574.666 -7876.3906 8574.4961 c-7876.3906 8574.3066 -7877.4238 8574.0537 -7877.4238 8573.8633 c-7877.2129 8573.5273 -7877.2129 8573.4424 v-7877.2129 8573.043 -7877.2129 8573 -7877.0225 8573 c-7876.7915 8573 -7875.9897 8573.2949 -7875.7378 8574.0117 c-7875.5474 8574.5391 -7874.5767 8576.2666 -7872.4258 8576.2666 c-7871.5615 8576.2666 -7871.2446 8576.1201 -7871.0977 8576.1201 c-7870.7817 8576.1201 -7868.8418 8578.166 -7868.8198 8578.334 c-7868.7998 8578.4395 -7868.7998 8578.5664 -7868.7998 8578.6719 c-7868.7998 8578.8828 -7868.7998 8579.2832 -7869.1782 8579.5361 c-7869.3896 8579.6631 -7869.4951 8579.916 -7869.4951 8580.168 c-7869.4951 8580.2744 -7869.4951 8580.6328 -7869.2207 8580.6328 c-7868.9473 8580.6328 -7868.9058 8580.4854 -7868.9058 8580.1904 c-7868.9058 8580.002 -7868.7358 8579.8945 -7868.5889 8579.8945 c-7868.4399 8579.8945 -7867.8506 8580.1904 -7867.8506 8580.6113 c-7867.8506 8580.8438 -7868.1455 8581.9189 -7869.4321 8581.9189 c-7870.4014 8581.9189 -7870.4014 8581.793 -7870.4014 8580.3994 c-7870.4014 8579.1357 -7870.3594 8578.7344 -7870.2119 8577.5967 c-7870.1904 8577.5967 -7870.1904 8577.5752 y-7870.1904 8577.4277 -7870.3174 8577.3643 -7870.4233 8577.3643 c-7870.4438 8577.3643 -7870.4648 8577.3848 -7870.4863 8577.3848 c-7870.6118 8577.4063 -7870.9072 8577.7227 -7871.8145 8577.7002 c-7873.7119 8577.7002 -7877.9087 8576.1416 -7879.2793 8573.6533 c-7879.8906 8572.5781 -7880.2705 8571.207 -7880.2705 8570.9541 c-7880.2705 8570.4053 -7879.2578 8570.2373 -7879.0049 8570.2373 c-7877.6553 8570.2373 -7876.2847 8571.9023 -7876.2847 8572.3457 c-7876.2847 8572.3877 -7876.3271 8572.4297 -7876.3486 8572.4297 c-7876.3906 8572.4297 -7876.4326 8572.4092 -7876.4961 8572.3672 c-7876.6431 8572.2197 -7877.2334 8571.5654 -7877.8662 8571.5654 c-7878.5625 8571.5654 -7878.5835 8572.0293 -7878.5835 8572.4512 c-7878.5835 8572.8945 -7878.5415 8573.4629 -7878.3306 8573.8633 cf0 D-7874.5352 8570.5527 m-7874.5352 8570.7002 -7874.5352 8571.0176 -7874.2192 8571.0176 c-7874.1553 8571.0176 -7874.0918 8570.9961 -7874.0278 8570.9121 c-7873.9863 8570.8262 -7873.8608 8570.3848 -7873.7754 8570.3848 c-7873.7334 8570.3848 -7873.7119 8570.4053 -7873.7119 8570.4688 c-7873.7119 8570.7002 -7873.8174 8571.0801 -7873.8174 8571.3135 c-7873.8174 8571.46 -7873.6694 8571.6289 -7873.5225 8571.6289 c-7873.3115 8571.6289 -7873.1855 8571.207 -7873.1226 8570.9961 c-7873.1006 8570.9326 -7873.0586 8570.9121 -7873.0386 8570.9121 c-7873.0166 8570.9326 -7873.0166 8570.9541 V-7873.0386 8571.4814 l-7873.0386 8571.7129 -7873.0386 8571.9023 -7872.8271 8571.9023 c-7872.6782 8571.9023 -7872.4897 8571.1016 -7872.3418 8571.1016 c-7872.3198 8571.1016 -7872.2998 8571.123 -7872.2998 8571.1855 c-7872.2998 8571.25 -7872.3623 8571.5869 -7872.3623 8571.6709 c-7872.3623 8571.8613 -7872.3418 8572.2822 -7872.1104 8572.2822 c-7872.0254 8572.2822 -7871.8774 8571.7969 -7871.7935 8571.7969 c-7871.7729 8571.7969 -7871.7729 8571.8184 -7871.7729 8571.8613 c-7871.7729 8571.9453 -7871.8994 8572.3037 -7871.8994 8572.3877 c-7871.8994 8572.4922 -7871.7935 8572.5996 -7871.7095 8572.5996 c-7871.5835 8572.5996 -7871.3506 8571.9863 -7871.3086 8571.9863 c-7871.2666 8571.9863 -7871.2446 8572.0508 -7871.2446 8572.1143 c-7871.2446 8572.2197 -7871.3926 8572.6406 -7871.3926 8572.7256 c-7871.3926 8572.873 -7871.3286 8572.957 -7871.2666 8572.957 c-7871.1826 8572.957 -7871.0342 8572.5566 -7870.9502 8572.5566 c-7870.9072 8572.5566 -7870.8862 8572.6621 -7870.8862 8572.7256 c-7871.0762 8573.4424 -7871.0762 8573.5898 v-7871.0762 8573.7168 -7871.0342 8573.7578 -7870.9922 8573.7578 c-7870.9072 8573.7578 -7870.7178 8573.2949 -7870.6338 8573.2949 c-7870.5918 8573.2949 -7870.5703 8573.3584 -7870.5703 8573.4424 c-7870.5703 8573.5898 -7870.7817 8574.1602 -7870.7817 8574.2637 c-7870.7817 8574.4121 -7870.7817 8574.6016 -7870.6758 8574.6016 c-7870.6338 8574.6016 -7870.4863 8574.3916 -7870.4438 8574.3916 c-7870.4014 8574.3916 -7870.3809 8574.4336 -7870.3809 8574.4961 c-7870.3809 8574.5596 -7870.5073 8574.8555 -7870.5073 8574.918 c-7870.5073 8575.0449 -7867.9561 8577.7637 -7867.4287 8577.7637 c-7866.9233 8577.7637 -7866.8594 8577.7637 -7866.7744 8577.9551 c-7866.6904 8578.1865 -7866.5854 8578.4189 -7866.1426 8578.6924 c-7865.0039 8579.3242 -7864.8774 8579.4102 -7864.8135 8579.7266 c-7864.7295 8580.2109 -7864.7085 8580.2529 -7864.3926 8580.4639 c-7864.2446 8580.5693 -7864.2026 8580.6748 -7864.2026 8580.8223 c-7864.2026 8581.1807 -7864.2026 8581.2236 -7864.0127 8581.2236 c-7863.7598 8581.2236 -7863.4214 8580.5488 -7863.4214 8580.1904 c-7863.4214 8579.2412 -7863.8018 8579.1357 -7864.4126 8578.9658 c-7864.5615 8578.9248 -7864.7085 8578.8184 -7864.7085 8578.7344 c-7864.7085 8578.6924 -7864.6875 8578.6719 -7864.6455 8578.6504 c-7863.7598 8578.1455 -7863.4214 8577.4492 -7863.4214 8576.8789 c-7863.4214 8576.0781 -7864.7085 8572.3672 -7864.7085 8572.0293 c-7864.7085 8571.5439 -7864.5615 8571.502 -7864.3711 8571.502 c-7864.2241 8571.502 -7863.7178 8572.0293 -7863.5903 8572.0293 c-7863.5073 8572.0293 -7863.4214 8571.9658 -7863.4214 8571.7969 c-7863.4214 8571.5654 -7863.8657 8570.5322 -7864.8984 8570.5322 c-7865.4878 8570.5322 -7865.8682 8571.0586 -7865.8682 8571.5215 c-7865.8682 8572.4727 -7865.5518 8572.6465 -7865.1934 8573.2168 c-7865.1294 8573.3438 -7865.0879 8573.4697 -7865.0879 8573.5762 c-7865.0879 8573.8496 -7865.7202 8573.7705 -7866.0786 8573.7705 c-7866.2256 8573.7705 -7866.3955 8573.7441 -7866.3955 8573.6377 c-7866.3955 8569.0215 -7869.6426 8565.4717 -7873.5225 8564.7334 c-7873.8394 8564.6689 -7873.9863 8564.5439 -7873.9863 8564.418 c-7873.9863 8564.375 -7873.1006 8563.2578 -7871.6255 8563.2578 c-7869.8535 8563.2578 -7868.7153 8564.7334 -7868.7153 8565.4922 c-7868.7153 8565.5762 -7868.7568 8565.6406 -7868.8198 8565.6406 c-7868.9058 8565.6406 -7869.8535 8564.6914 -7870.0854 8564.6914 c-7870.2119 8564.6914 -7870.3174 8564.7969 -7870.3174 8564.9023 c-7870.3174 8565.0293 -7870.2334 8565.1543 -7870.0439 8565.3018 c-7869.9814 8565.3242 -7868.5454 8567.0117 -7868.2515 8567.3486 c-7867.6401 8568.0654 -7866.8594 8568.8447 -7865.6362 8568.8447 c-7864.4561 8568.8447 -7863.4214 8567.6445 -7863.4214 8566.8848 c-7863.4214 8566.1055 -7863.8857 8565.4082 -7864.3711 8565.0078 c-7865.8896 8563.7422 -7865.8896 8563.3633 -7865.8896 8563.1309 c-7865.8896 8562.8145 -7865.6992 8562.6895 -7865.4878 8562.6895 c-7865.1514 8562.6895 -7864.9824 8562.8359 -7864.9824 8563.5098 c-7864.9824 8563.8477 -7864.6455 8564.1855 -7864.2026 8564.1855 c-7863.7598 8564.1855 -7863.4434 8563.8066 -7863.4434 8563.1943 c-7863.4434 8562.584 -7864.2871 8561.8447 -7865.4878 8561.8447 c-7867.1338 8561.8447 -7867.6182 8563.0039 -7867.6182 8563.4893 c-7867.6182 8563.8262 -7867.5127 8564.418 -7867.1958 8564.7754 c-7866.8594 8565.1768 -7866.4595 8565.873 -7866.1846 8566.5898 c-7865.9521 8567.2432 -7865.4258 8567.6016 -7865.0879 8567.6016 c-7865.0239 8567.6016 -7865.0039 8567.5801 -7865.0039 8567.5381 c-7865.0039 8567.4326 -7865.2144 8567.0527 -7865.2144 8566.9688 c-7865.2144 8566.5898 -7865.1094 8566.3789 -7864.8984 8566.3789 c-7864.3711 8566.3789 -7864.2656 8567.0313 -7864.2656 8567.2637 c-7864.2656 8567.75 -7864.6245 8568.3389 -7865.6782 8568.3389 c-7867.0063 8568.3389 -7868.1245 8566.5898 -7868.1245 8566.5264 c-7868.1245 8566.5039 -7868.0825 8565.957 -7868.0825 8565.8506 c-7868.0825 8563.9521 -7869.79 8562.6895 -7871.6255 8562.6895 c-7873.1855 8562.6895 -7874.3447 8563.9121 -7874.5352 8564.2061 c-7874.6401 8564.375 -7874.7666 8564.459 -7874.9146 8564.459 c-7875.2729 8564.459 -7878.1191 8564.3975 -7878.1191 8563.9746 c-7878.1191 8563.9326 -7877.9937 8563.4688 -7877.8242 8563.4688 c-7877.7607 8563.4688 -7877.6982 8563.5098 -7877.6353 8563.5742 c-7877.4438 8563.8066 -7877.0225 8563.9326 -7876.6431 8563.9326 c-7876.0942 8563.9326 -7875.1895 8563.3418 -7875.1895 8562.6045 c-7875.1895 8562.3086 -7875.5679 8561.8242 -7875.8838 8561.8242 c-7876.1377 8561.8242 -7877.1914 8562.541 -7877.4238 8562.541 c-7877.7402 8562.541 -7877.8662 8562.3926 -7878.1606 8562.0557 c-7878.3306 8561.8662 -7878.4575 8561.8447 -7878.6465 8561.8447 c-7878.8154 8561.8447 -7878.9634 8561.9502 -7878.9634 8562.0977 c-7878.9634 8562.2656 -7878.6465 8562.584 -7878.6265 8562.8574 c-7878.6265 8563.0039 -7878.6055 8563.2354 -7878.6055 8563.4258 c-7878.6055 8563.6797 -7878.6265 8564.0381 -7878.8994 8564.0381 c-7879.7217 8564.0381 -7881.7681 8562.752 -7882.6538 8562.1602 c-7883.1592 8561.8242 -7883.2432 8561.8242 -7883.3066 8561.8242 c-7883.4336 8561.8242 -7883.5176 8561.9082 -7883.5176 8562.0557 c-7883.5176 8562.1816 -7881.0713 8564.334 -7878.8994 8565.0703 c-7878.5835 8565.1768 -7878.6055 8565.3242 -7878.5625 8565.4922 c-7878.1406 8567.2432 -7876.5166 8569.416 -7875.9263 8569.416 c-7875.7783 8569.416 -7875.7158 8569.416 -7875.7158 8569.5215 c-7875.7158 8569.7305 -7875.6104 8569.9629 -7875.4634 8569.9629 c-7875.4209 8569.9629 -7875.2524 8569.7305 -7875.21 8569.7305 c-7875.1255 8569.7305 -7875.0615 8570.1953 -7875.0415 8570.2783 c-7874.9995 8570.3848 -7874.9146 8570.4688 -7874.8506 8570.4688 c-7874.7666 8570.4688 -7874.5986 8570.1318 -7874.5352 8570.1318 c-7874.5137 8570.1318 -7874.4927 8570.1514 -7874.4927 8570.1953 c-7874.5352 8570.5527 Lf1 D-7875.9058 8566.041 m-7876.0942 8566.4629 -7876.2002 8566.7158 -7876.2002 8567.0957 c-7876.2002 8567.3486 -7875.7783 8568.5928 y-7875.7783 8568.6563 -7875.7998 8568.6768 -7875.8633 8568.6768 c-7876.2847 8568.6768 -7878.0352 8566.4414 -7878.0352 8565.5762 c-7878.0352 8565.4717 -7877.9722 8565.4082 -7877.8662 8565.4082 c-7877.8042 8565.4082 -7875.8633 8565.5977 -7875.8633 8565.8301 c-7875.8633 8565.8936 -7875.8838 8565.957 -7875.9058 8566.041 cf-7867.8081 8577.0059 m-7868.7568 8576.1201 -7869.6846 8575.2559 -7869.6846 8574.707 c-7869.6846 8574.3701 -7869.6226 8573.9688 -7869.6226 8573.5479 c-7869.6226 8572.0928 -7870.9722 8570.7637 -7871.8774 8570.3008 c-7872.3623 8570.0469 -7872.8481 8569.4785 -7872.8481 8569.1191 c-7872.8481 8569.0137 -7872.8057 8568.9512 -7872.7422 8568.9512 c-7872.6582 8568.9512 -7872.5942 8568.9717 -7872.5103 8568.9717 c-7872.4473 8568.9717 -7872.2158 8568.8447 -7872.1519 8568.8447 c-7872.0049 8568.8447 -7871.6035 8569.5 -7871.4561 8569.5 c-7871.2446 8569.5 -7871.1826 8569.2891 -7871.1826 8569.1406 c-7871.1826 8568.7822 -7871.7305 8567.4326 -7872.9951 8567.4326 c-7873.7554 8567.4326 -7874.0498 8567.875 -7874.0498 8568.2129 c-7874.0498 8568.8447 -7873.5225 8569.457 -7873.3975 8569.627 c-7873.3545 8569.668 -7873.3335 8569.71 -7873.3335 8569.752 c-7873.3335 8569.7949 -7873.3545 8569.8145 -7873.4175 8569.8145 c-7873.6694 8569.8145 -7875.6519 8568.7822 -7875.6519 8567.0527 c-7875.6519 8566.6318 -7875.4209 8565.8301 -7874.7666 8565.8301 c-7872.2998 8565.8301 -7868.1675 8569.6895 -7868.1675 8574.1377 c-7868.1675 8574.5176 -7868.3984 8575.0664 -7868.4614 8575.4453 c-7868.4834 8575.4668 -7868.4834 8575.5088 -7868.4834 8575.5498 c-7868.4834 8575.6768 -7868.4399 8575.8457 -7868.3145 8575.8457 c-7868.0615 8575.8457 -7866.3955 8575.6563 -7866.0366 8575.6563 c-7864.3926 8575.6563 -7863.9702 8575.6563 -7863.9702 8576.752 c-7863.9702 8577.9756 -7865.1094 8578.293 -7865.5098 8578.293 c-7865.8896 8578.293 -7866.2695 8577.9961 -7866.2695 8577.6377 c-7866.2695 8577.5322 -7866.0791 8577.0898 -7866.0791 8577.0059 c-7866.0791 8576.8584 -7866.2065 8576.7744 -7866.3325 8576.7744 c-7866.4795 8576.7744 -7866.9858 8577.2793 -7867.1338 8577.2793 c-7867.3862 8577.2793 -7867.6401 8577.1533 -7867.8081 8577.0059 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 7)0 Au1 Ap0 D0 J 0 j 1 w 4 M []0 d0 XR-7867 8587 m-7885 8587 L-7885 8569 L-7867 8569 L-7867 8587 Lnu0 Ap0 O0 0 0 1 k-7867 8578 m-7874.8379 8573.4746 L-7874.8379 8576.5625 L-7885 8576.5625 L-7885 8579.4375 L-7874.8379 8579.4375 L-7874.8379 8582.5264 L-7867 8578 Lf0.15 1 0.9 0.1 k-7871.2939 8576.3857 m-7874.0879 8574.7744 L-7874.0879 8577.3008 L-7885 8577.3008 L-7885 8578.7002 L-7874.0879 8578.7002 L-7874.0879 8581.2266 L-7871.2939 8579.6133 L-7868.5 8578 L-7871.2939 8576.3857 Lf0 1 1 0 k-7873.1675 8577.0918 m-7873.5586 8577.0918 -7873.8896 8577.3408 -7874.0176 8577.6865 C-7885 8577.6865 L-7885 8578.3125 L-7874.0176 8578.3125 L-7873.8896 8578.6602 -7873.5586 8578.9082 -7873.1675 8578.9082 c-7872.6655 8578.9082 -7872.2588 8578.502 -7872.2588 8578 c-7872.2588 8577.499 -7872.6655 8577.0918 -7873.1675 8577.0918 cfUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -(OnPath Brush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/) -( Floral Spoke/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush) -(/ Adobe PatternOnPath Brush Tool/ Gothic/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Floral Spoke)(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Gothic)(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Red Arrow Brush)(1 / Unnamed Brush Pat 3/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -(t 5/ Unnamed Brush Pat 7/ Unnamed Brush Pat 2/ 5 0.00392157 0.) -(00392157 0.00784314 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 k(White)Pc0 0 0 1 k(Black)Pc0 1 1 0 k(CMYK Red)Pc0 0 1 0 k(CMYK Yellow)Pc1 0 1 0 k(CMYK Green)Pc1 0 0 0 k(CMYK Cyan)Pc1 1 0 0 k(CMYK Blue)Pc0 1 0 0 k(CMYK Magenta)Pc0.15 1 0.9 0.1 k(C=15 M=100 Y=90 K=10)Pc0 0.9 0.85 0 k(C=0 M=90 Y=85 K=0)Pc0 0.8 0.95 0 k(C=0 M=80 Y=95 K=0)Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0)Pc0 0.35 0.85 0 k(C=0 M=35 Y=85 K=0)Pc0.05 0 0.9 0 k(C=5 M=0 Y=90 K=0)Pc0.2 0 1 0 k(C=20 M=0 Y=100 K=0)Pc0.5 0 1 0 k(C=50 M=0 Y=100 K=0)Pc0.75 0 1 0 k(C=75 M=0 Y=100 K=0)Pc0.85 0.1 1 0.1 k(C=85 M=10 Y=100 K=10)Pc0.9 0.3 0.95 0.3 k(C=90 M=30 Y=95 K=30)Pc0.75 0 0.75 0 k(C=75 M=0 Y=75 K=0)Pc0.8 0.1 0.45 0 k(C=80 M=10 Y=45 K=0)Pc0.7 0.15 0 0 k(C=70 M=15 Y=0 K=0)Pc0.85 0.5 0 0 k(C=85 M=50 Y=0 K=0)Pc1 0.95 0.05 0 k(C=100 M=95 Y=5 K=0)Pc1 1 0.25 0.25 k(C=100 M=100 Y=25 K=25)Pc0.75 1 0 0 k(C=75 M=100 Y=0 K=0)Pc0.5 1 0 0 k(C=50 M=100 Y=0 K=0)Pc0.35 1 0.35 0.1 k(C=35 M=100 Y=35 K=10)Pc0.1 1 0.5 0 k(C=10 M=100 Y=50 K=0)Pc0 0.95 0.2 0 k(C=0 M=95 Y=20 K=0)Pc0.25 0.25 0.4 0 k(C=25 M=25 Y=40 K=0)Pc0.4 0.45 0.5 0.05 k(C=40 M=45 Y=50 K=5)Pc0.5 0.5 0.6 0.25 k(C=50 M=50 Y=60 K=25)Pc0.55 0.6 0.65 0.4 k(C=55 M=60 Y=65 K=40)Pc0.25 0.4 0.65 0 k(C=25 M=40 Y=65 K=0)Pc0.3 0.5 0.75 0.1 k(C=30 M=50 Y=75 K=10)Pc0.35 0.6 0.8 0.25 k(C=35 M=60 Y=80 K=25)Pc0.4 0.65 0.9 0.35 k(C=40 M=65 Y=90 K=35)Pc0.4 0.7 1 0.5 k(C=40 M=70 Y=100 K=50)Pc0.5 0.7 0.8 0.7 k(C=50 M=70 Y=80 K=70)PcBb2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient)PcBb2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade to Black)PcBb0 0 0 0 Bh2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient)PcBb0 0 0 0 Bh2 (Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Soft Black Vignette)PcBb2 (Desert Sunset) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Desert Sunset)PcBb0 0 0 0 Bh2 (Copper Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Copper Radial)Pc(Fish Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Fish Pattern)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 0 0 0.899994 k(C=0 M=0 Y=0 K=90)Pc0 0 0 0.799988 k(C=0 M=0 Y=0 K=80)Pc0 0 0 0.699997 k(C=0 M=0 Y=0 K=70)Pc0 0 0 0.599991 k(C=0 M=0 Y=0 K=60)Pc0 0 0 0.5 k(C=0 M=0 Y=0 K=50)Pc0 0 0 0.399994 k(C=0 M=0 Y=0 K=40)Pc0 0 0 0.299988 k(C=0 M=0 Y=0 K=30)Pc0 0 0 0.199997 k(C=0 M=0 Y=0 K=20)Pc0 0 0 0.099991 k(C=0 M=0 Y=0 K=10)Pc0 0 0 0.049988 k(C=0 M=0 Y=0 K=5)Pc0 1 1 0 k(C=0 M=100 Y=100 K=0)Pc0 0.75 1 0 k(C=0 M=75 Y=100 K=0)Pc0 0.1 0.95 0 k(C=0 M=10 Y=95 K=0)Pc0.85 0.1 1 0 k(C=85 M=10 Y=100 K=0)Pc1 0.9 0 0 k(C=100 M=90 Y=0 K=0)Pc0.6 0.9 0.000031 0.000031 k(C=60 M=90 Y=0 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Auu0 O0 g0 J 0 j 1 w 4 M []0 d0 XR304.9824 235.252 m230.7168 235.252 179.166 251.9355 151.7637 284.8379 c122.9082 319.4863 126.4395 363.2363 132.7363 397.478 c151.9082 501.7144 191.041 518.8628 192.7012 519.5405 C193.4277 519.8394 L419.0723 519.8394 L419.7988 519.5405 L421.4551 518.8628 460.5879 501.7144 479.7598 397.478 c486.0605 363.2363 489.5879 319.4863 460.7324 284.8379 c433.3301 251.9355 381.7832 235.252 307.5176 235.252 C304.9824 235.252 Lf0 0.6 0.79 0.32 k194.2168 515.8394 m155.6699 500.0405 136.6699 396.7554 v127.5527 347.1855 115.5645 239.252 304.9824 239.252 c307.5176 239.252 l496.9316 239.252 484.9434 347.1855 475.8262 396.7554 c456.8301 500.0405 418.2832 515.8394 y194.2168 515.8394 lf0 0.65 0.84 0.54 k418.2832 515.8394 m194.2168 515.8394 L183.0918 511.269 169.8496 491.0386 V171.6465 481.5347 175.9277 470.0229 185.502 459.1206 c205.9395 435.8472 242.748 424.0464 294.9082 424.0464 C316.2441 424.0464 L368.4004 424.0464 405.209 435.8472 425.6465 459.1206 c435.7676 470.644 439.9746 482.8472 441.584 492.6421 C428.8184 511.5132 418.2832 515.8394 Yf0 0.65 0.84 0.44 k460.7324 351.6582 m433.3301 318.7559 381.7832 302.0723 307.5176 302.0723 C304.9824 302.0723 L230.7168 302.0723 179.166 318.7559 151.7637 351.6582 c143.6074 361.4512 138.041 371.9746 134.3926 382.8027 C126.9824 329.4473 131.8184 239.252 304.9824 239.252 C307.5176 239.252 L480.6777 239.252 485.5137 329.4473 478.1074 382.8027 C474.4551 371.9746 468.8887 361.4512 460.7324 351.6582 cf0 g304.9824 236.252 m285.0059 236.252 266.4434 237.4727 249.8145 239.8789 C249.5566 239.9238 L189.3613 257.0293 180.9512 317.7422 192.002 364.5449 c204.6738 418.2104 286.8965 419.7612 296.2285 419.7612 C316.2715 419.7612 L325.6035 419.7612 407.8262 418.2104 420.498 364.5449 c431.5488 317.7422 423.1387 257.0293 363.0762 239.9629 C362.8223 239.9004 L346.0605 237.4727 327.498 236.252 307.5176 236.252 C304.9824 236.252 Lf0 0.23 0.44 0.03 k417.5762 363.8574 m404.7285 418.269 315.5527 416.7573 Y296.9473 416.7573 L207.7715 418.269 194.9238 363.8574 v183.9824 317.5254 192.8066 259.1699 250.2441 242.8477 C266.2988 240.5254 284.4551 239.252 304.9824 239.252 C307.5176 239.252 L328.0449 239.252 346.2012 240.5254 362.2559 242.8496 C419.6934 259.1699 428.5176 317.5254 417.5762 363.8574 cf0 0.3 0.49 0.1 k307.5176 302.0723 m304.9824 302.0723 L257.6621 302.0723 219.584 308.8574 191.0762 322.2832 C193.0449 287.5137 209.2559 254.5371 250.1465 242.873 C266.2324 240.5391 284.4043 239.252 304.9824 239.252 C307.5176 239.252 L328.0957 239.252 346.2676 240.541 362.3535 242.873 C403.2441 254.5371 419.4551 287.5137 421.4238 322.2832 C392.916 308.8574 354.8379 302.0723 307.5176 302.0723 Cf0 g301.1504 348.252 m295.2598 349.0996 293.4395 352.2305 Y298.9707 350.002 302.8457 349.7422 304.6621 351.4844 c307.0566 353.7793 305.748 359.4258 305.0449 361.4082 C304.0293 364.2578 L306.5918 362.6504 L306.6738 362.5957 314.9121 357.5117 319.4121 362.7207 c320.2441 363.6895 320.584 364.8027 320.4434 366.123 c319.8262 371.9395 311.6582 380.8008 Y312.0723 380.4863 321.8145 373.0703 322.5332 366.3477 c322.7363 364.4414 322.2207 362.7598 320.998 361.3496 c317.2832 357.0391 311.5098 358.0371 307.6855 359.7109 C308.2832 356.9434 308.7168 352.4629 306.1191 349.9727 c304.9277 348.8262 303.2676 348.252 301.1504 348.252 C301.1504 348.252 Lfu294.9063 433.9194 m242.748 433.9194 205.9395 445.7183 185.502 468.9917 c166.9785 490.0854 168.2363 513.48 169.0605 520.1479 c171.1504 537.0112 180.7246 556.1948 197.5215 577.1675 c220.6465 606.0425 238.1309 626.7573 247.5215 637.8882 C250.7051 641.6655 L265.6152 659.3823 283.5469 677.5151 303.4844 677.6577 C307.6367 677.6577 L327.6055 677.5151 345.5352 659.3823 360.4414 641.6655 C363.6563 637.8511 L373.0469 626.7222 390.5273 606.0093 413.6289 577.1675 c430.4219 556.1948 440 537.0093 442.0898 520.146 c442.9141 513.48 444.1719 490.0854 425.6484 468.9917 c405.2109 445.7183 368.4023 433.9194 316.2422 433.9194 C294.9063 433.9194 Lfuu279.125 657.0757 m278.6855 657.0757 278.2441 657.1479 277.8203 657.2944 c274.082 658.5835 255.1895 665.3062 250.4863 670.9507 c248.9512 672.7944 247.6855 676.1948 250.373 681.9312 c253.9199 689.5054 264.377 700.0679 273.3477 700.0679 C273.6914 700.064 L285.6543 699.7124 290.6543 674.312 291.9023 666.5347 c292.1699 664.8628 291.3574 663.2026 289.8711 662.3921 C281.043 657.5659 L280.4492 657.2397 279.7891 657.0757 279.125 657.0757 C279.125 657.0757 Lf0 0.6 0.79 0.32 k287.9531 665.8999 m283.1582 695.7847 273.5742 696.0659 v263.9902 696.3472 249.3301 678.5874 253.5605 673.5132 c257.7871 668.439 279.125 661.0757 y287.9531 665.8999 lfUu0 g332.0254 657.0757 m332.4648 657.0757 332.9063 657.1479 333.3301 657.2944 c337.0684 658.5835 355.959 665.3062 360.6641 670.9507 c362.1992 672.7944 363.4668 676.1948 360.7793 681.9312 c357.2324 689.5054 346.7754 700.0679 337.8027 700.0679 C337.459 700.064 L325.4961 699.7124 320.4961 674.312 319.248 666.5347 c318.9805 664.8628 319.793 663.2026 321.2793 662.3921 C330.1074 657.5659 L330.7012 657.2397 331.3613 657.0757 332.0254 657.0757 C332.0254 657.0757 Lf0 0.6 0.79 0.32 k323.1973 665.8999 m327.9922 695.7847 337.5762 696.0659 v347.1602 696.3472 361.8184 678.5874 357.5918 673.5132 c353.3613 668.439 332.0254 661.0757 y323.1973 665.8999 lfUUu303.5117 673.6577 m286.0977 673.5347 269.3867 657.7495 253.7598 639.2827 c245.7715 629.8413 226.7285 607.6187 200.6348 575.2202 c178.3418 547.5366 174.1113 529.2163 173.0293 520.5327 c171.8145 510.7847 167.2988 439.2827 294.9063 439.2827 c316.2422 439.2827 l443.8477 439.2827 439.332 510.7847 438.1172 520.5327 c437.0352 529.2163 432.8047 547.5366 410.5117 575.2202 c384.418 607.6187 365.375 629.8413 357.3867 639.2827 c341.7617 657.7495 325.0508 673.5347 307.6367 673.6577 c303.5117 673.6577 lfU0 g275.2461 596.3589 m256.5879 596.3589 241.4082 611.6792 241.4082 630.5112 c241.4082 649.3433 256.5879 664.6655 275.2461 664.6655 c293.9023 664.6655 309.082 649.3433 309.082 630.5112 c309.082 611.6792 293.9023 596.3589 275.2461 596.3589 C275.2461 596.3589 Lf331.707 601.103 m317.3008 601.103 305.5781 612.6401 305.5781 626.8198 c305.5781 641.0034 317.3008 652.5405 331.707 652.5405 c346.1133 652.5405 357.832 641.0034 357.832 626.8198 c357.832 612.6401 346.1133 601.103 331.707 601.103 C331.707 601.103 Lf1 Ap0.11 0 0 0 k306.082 631.3433 m306.082 614.5991 292.2773 601.0229 275.2461 601.0229 c258.2129 601.0229 244.4082 614.5991 244.4082 631.3433 c244.4082 648.0894 258.2129 661.6655 275.2461 661.6655 c292.2773 661.6655 306.082 648.0894 306.082 631.3433 cf0 Ap0 0 0 0 k275.2461 653.8628 m288.8516 653.8628 300.5781 645.6968 305.9453 633.98 C304.5859 649.4878 291.3711 661.6655 275.2461 661.6655 c259.1191 661.6655 245.9043 649.4878 244.5449 633.98 C249.9121 645.6968 261.6387 653.8628 275.2461 653.8628 cf1 Ap0.11 0 0 0 k354.832 627.7456 m354.832 615.5425 344.4766 605.6479 331.707 605.6479 c318.9336 605.6479 308.5781 615.5425 308.5781 627.7456 c308.5781 639.9507 318.9336 649.8452 331.707 649.8452 c344.4766 649.8452 354.832 639.9507 354.832 627.7456 cf0 Ap0 0 0 0 k331.707 641.7378 m341.7305 641.7378 350.4414 636.146 354.8203 627.9702 C354.6914 640.0698 344.3984 649.8452 331.707 649.8452 c319.0117 649.8452 308.7188 640.0698 308.5898 627.9702 C312.9688 636.146 321.6836 641.7378 331.707 641.7378 cf1 Ap0 g292.8086 627.4351 m292.8086 625.8921 291.5586 624.6401 290.0156 624.6401 c288.4688 624.6401 287.2188 625.8921 287.2188 627.4351 c287.2188 628.978 288.4688 630.23 290.0156 630.23 c291.5586 630.23 292.8086 628.978 292.8086 627.4351 cf325.0547 627.4351 m325.0547 625.8921 323.8047 624.6401 322.2617 624.6401 c320.7148 624.6401 319.4648 625.8921 319.4648 627.4351 c319.4648 628.978 320.7148 630.23 322.2617 630.23 c323.8047 630.23 325.0547 628.978 325.0547 627.4351 cf0 Ap0 0.65 0.84 0.44 k425.6445 499.1968 m405.207 476.0542 368.3984 464.3198 316.2422 464.3198 C294.9063 464.3198 L242.748 464.3198 205.9395 476.0542 185.502 499.1968 c179.4277 506.0737 175.4902 513.1948 172.959 519.8979 C171.6895 508.062 169.7441 439.2827 294.9063 439.2827 C316.2422 439.2827 L441.4023 439.2827 439.457 508.062 438.1914 519.8979 C435.6563 513.1948 431.7188 506.0737 425.6445 499.1968 cfuu0 g328.375 505.4312 m317.1172 505.4312 311.0781 508.9526 307.834 512.6655 C303.3125 512.6655 L300.0664 508.9507 294.0273 505.4312 282.7734 505.4312 c276.2266 505.4312 268.6602 507.2632 260.9238 510.3765 C260.9277 488.562 L260.9746 487.7397 262.4238 468.4429 293.9863 468.4429 C317.1602 468.4429 L348.9238 468.4429 350.1895 487.9976 350.2266 488.7358 C350.2266 510.3784 L342.4902 507.2632 334.9219 505.4312 328.375 505.4312 cfUu0 0 0 0 k328.375 504.0542 m315.5293 504.0542 309.4766 508.6362 306.6211 512.8589 C304.5234 512.8589 L301.666 508.6343 295.6152 504.0542 282.7734 504.0542 c277.1543 504.0542 270.7813 505.4116 264.1973 507.7632 C264.1973 488.7358 L265.1406 471.7163 293.9863 471.7163 V317.1602 471.7163 L346.0137 471.7163 346.9551 488.7358 Y346.9551 507.7632 L340.3691 505.4116 333.9941 504.0542 328.375 504.0542 cfU1 Ap0 g307.541 468.4058 m303.6074 468.4058 L303.6074 514.6655 L307.541 514.6655 L307.541 468.4058 LfUu0 Ap208.3887 539.5386 m209.5254 550.5034 223.9668 553.269 v206.5332 556.1831 208.3887 539.5386 vf/BBAccumRotation (0.484745) XT282.7734 504.0542 m259.5879 504.0542 223.5879 527.0073 212.7363 548.7065 C215.4199 550.0483 L225.666 529.5562 260.916 507.0542 282.7734 507.0542 c303.4258 507.0542 304.0586 519.355 304.0742 519.8784 C304.0742 533.98 L307.0742 533.98 L307.0742 519.8394 L307.0703 519.6519 306.4727 504.0542 282.7734 504.0542 C282.7734 504.0542 Lf328.375 504.0542 m304.6758 504.0542 304.0781 519.6519 304.0742 519.8081 C304.0742 533.98 L307.0742 533.98 L307.0742 519.8394 L307.0898 519.355 307.7227 507.0542 328.375 507.0542 c350.2305 507.0542 385.4805 529.5562 395.7266 550.0483 C398.4102 548.7065 L387.5625 527.0073 351.5625 504.0542 328.375 504.0542 C328.375 504.0542 Lf402.7578 539.5386 m401.625 550.5034 387.1836 553.269 v404.6133 556.1831 402.7578 539.5386 vf/BBAccumRotation (0.484745) XTu305.5742 526.7476 m279.1406 526.7476 257.6309 543.1558 257.6309 563.3237 c257.6309 583.4956 279.1406 599.9019 305.5742 599.9019 c332.0078 599.9019 353.5156 583.4956 353.5156 563.3237 c353.5156 543.1558 332.0078 526.7476 305.5742 526.7476 C305.5742 526.7476 Lf1 Ap0 0 0 0 k325.1367 581.2769 m325.1367 576.0972 316.3789 571.8999 305.5742 571.8999 c294.7695 571.8999 286.0117 576.0972 286.0117 581.2769 c286.0117 586.4546 294.7695 590.6519 305.5742 590.6519 c316.3789 590.6519 325.1367 586.4546 325.1367 581.2769 cfUUu0 Ap0 g279.8613 671.6929 m272.9648 685.3179 262.9395 682.9858 v275.9238 691.2886 279.8613 671.6929 vf/BBAccumRotation (0.228537) XT331.6289 671.6929 m338.5254 685.3179 348.5508 682.9858 v335.5664 691.2886 331.6289 671.6929 vf/BBAccumRotation (0.228537) XTUUUu609.3535 93.6484 m592.543 93.6484 574.0664 95.0254 554.4355 97.7402 c542.9492 99.3301 540.4922 108.2441 540.7891 112.9004 C540.7891 127.3027 L540.7891 127.6563 540.8359 128.0098 540.9297 128.3516 C546.8398 150.0918 L551.3477 254.7773 L548.4473 366.1035 L548.4238 367.0156 548.7109 367.9082 549.2656 368.6348 c549.9551 369.5391 566.3809 390.7871 584.3633 390.7871 c587.6387 390.7871 590.7871 390.0879 593.7227 388.7051 c597.8711 386.7539 607.7305 384.4277 631.1406 384.4277 C631.7305 384.4277 l632.9688 384.4277 634.1387 383.8535 634.8965 382.873 C635.6426 381.9043 L638.1797 383.7656 L638.8398 384.25 639.6328 384.5195 640.4512 384.5391 c658.8809 384.9727 675.3516 386.5098 675.5156 386.5254 c675.6406 386.5371 675.7656 386.543 675.8906 386.543 c676.8965 386.543 677.8691 386.1641 678.6133 385.4746 c679.4473 384.6973 679.9121 383.6035 679.8906 382.4629 c679.1699 346.8379 674.4844 274.0938 674.4375 273.3633 c674.334 271.7637 673.2852 270.3789 671.7715 269.8477 C666.3652 267.9473 L670.0098 265.7598 L671.2305 265.0254 671.9688 263.6973 671.9492 262.2715 c670.0879 135.082 678.5625 113.3359 679.5605 111.2305 C680.3477 110.3789 680.5547 109.4023 680.4063 108.2285 c680.2539 107.0117 679.3652 106.1484 678.3125 105.5176 c677.5059 105.0332 657.9824 93.6484 609.3535 93.6484 C609.3535 93.6484 Lf0 0.07 0.19 0.09 k544.7891 112.7578 m544.7891 127.3027 L550.8164 149.4727 L555.3496 254.7422 L552.4453 366.207 L573.5039 393.8008 592.0195 385.0879 v599.7813 381.4355 615.7734 380.4004 631.7305 380.4277 C634.8633 376.373 L640.5449 380.541 L659.3438 380.9824 675.8906 382.543 Y675.1641 346.5957 670.4453 273.6211 Y657.0117 268.9004 L667.9492 262.3301 L665.9102 122.9551 676.2539 108.9473 Y643.7402 89.4238 554.9844 101.7031 v544.0156 103.2207 544.7891 112.7578 Yf0 0.1 0.24 0.24 k592.0195 385.0879 m573.5039 393.8008 552.4453 366.207 Y555.3496 254.7422 L550.8164 149.4727 L544.7891 127.3027 L544.7891 112.7578 L544.0156 103.2207 554.9844 101.7031 v555.9609 101.5684 556.8945 101.457 557.8574 101.3301 C557.2168 111.1484 577.2871 117.4023 589.959 120.5703 c606.2246 124.6367 606.457 139.0859 606.7324 148.0176 c606.9531 155.2227 612.7695 318.1465 615.0117 380.8789 C605.4121 381.4766 597.0098 382.7383 592.0195 385.0879 cf0 g540.7969 112.4961 m540.7754 112.7422 540.7891 113.1973 V540.7891 167.3555 L540.7891 168.6172 541.3848 169.8047 542.3945 170.5586 c543.0938 171.082 543.9355 171.3555 544.7891 171.3555 c545.168 171.3555 545.5488 171.3008 545.9219 171.1914 C582.9219 160.2715 L584.6211 159.7695 585.7891 158.209 585.7891 156.4355 C585.7891 133.1855 L585.7891 131.0859 584.1641 129.3418 582.0684 129.1953 c564.6895 127.9746 555.7246 123.416 551.6582 118.9883 C551.377 118.6816 551.1191 118.375 550.8828 118.0703 C544.7188 108.2207 547.1855 105.3926 547.127 105.3926 C540.9785 110.4199 540.7969 112.4961 Vf0 0.07 0.19 0.29 k544.7891 167.3555 m544.7891 112.7578 l544.9492 130.3945 581.7891 133.1855 v581.7891 156.4355 l544.7891 167.3555 lfu0 g551.1016 128.4805 m552.6348 130.3203 555.7148 130.9883 557.916 131.4824 c558.3027 131.5684 559.834 132.0469 559.6602 132.6973 c559.4805 133.3672 557.9316 132.9648 557.541 132.877 c554.3125 132.1543 549.832 130.998 547.5781 128.293 c547.0156 127.6191 548.0605 127.498 548.5254 127.5234 c549.3301 127.5664 550.5527 127.8203 551.1016 128.4805 c551.1016 128.4805 lfUu549.9355 133.418 m550.0078 133.5059 550.3613 133.8262 550.0313 133.5352 C550.4082 133.8691 550.832 134.1484 551.2559 134.416 c552.9805 135.5059 555.0977 136.0273 557.0586 136.4668 c557.8027 136.6348 558.8867 137.3711 558.6445 138.2754 c558.3906 139.2227 557.1113 139.2148 556.3672 139.0488 c553.168 138.3301 548.9375 137.1797 546.7129 134.5117 c545.1504 132.6348 548.8398 132.1055 549.9355 133.418 c549.9355 133.418 lfUu549.3438 140.8496 m552.7168 142.7148 556.6797 143.4531 560.4961 143.3164 c561.7383 143.2715 564.6797 145.0859 562.0859 145.1797 c556.9766 145.3633 551.5332 144.1563 547.0352 141.6699 c544.7656 140.416 548.2754 140.2598 549.3438 140.8496 c549.3438 140.8496 lfU1.59375 93.6484 m-47.0352 93.6484 -66.5586 105.0332 -67.3633 105.5176 c-68.3242 106.0938 -69 107.0469 -69.2227 108.1426 c-69.418 109.0859 -69.2637 110.0605 -68.8008 110.8926 C-68.293 112.1289 -62.0039 130.125 -61 262.3613 c-60.9902 263.7539 -60.2539 265.041 -59.0605 265.7598 C-55.418 267.9473 L-60.8242 269.8477 L-62.3359 270.3789 -63.3848 271.7637 -63.4883 273.3633 c-63.5352 274.0938 -68.2227 346.8379 -68.9414 382.4629 c-68.9648 383.6035 -68.5 384.6973 -67.6641 385.4746 c-66.9219 386.1641 -65.9473 386.543 -64.9414 386.543 c-64.8164 386.543 -64.6914 386.5371 -64.5664 386.5254 c-64.4023 386.5098 -47.9336 384.9727 -29.5039 384.5391 c-28.6836 384.5195 -27.8906 384.25 -27.2305 383.7656 C-24.6953 381.9043 L-23.9473 382.873 L-23.1914 383.8535 -22.0195 384.4277 -20.7813 384.4277 c-20.1914 384.4277 L3.21875 384.4277 13.0781 386.7539 17.2266 388.7051 c20.1602 390.0879 23.3105 390.7871 26.5859 390.7871 c44.5664 390.7871 60.9922 369.5391 61.6836 368.6348 c62.2363 367.9082 62.5254 367.0156 62.502 366.1035 C59.6016 254.7773 L64.1094 150.0918 L70.0195 128.3516 L70.1133 128.0098 70.1602 127.6563 70.1602 127.3027 C70.1602 112.9004 L70.457 108.2441 68 99.3301 56.5117 97.7402 c36.8828 95.0254 18.4063 93.6484 1.59766 93.6484 C1.59766 93.6484 1.59375 93.6484 vf0 0.07 0.19 0.09 k66.1602 112.7578 m66.1602 127.3027 L60.1328 149.4727 L55.5977 254.7422 L58.5039 366.207 L37.4453 393.8008 18.9297 385.0879 v11.168 381.4355 -4.82422 380.4004 -20.7813 380.4277 C-23.9141 376.373 L-29.5977 380.541 L-48.3945 380.9824 -64.9414 382.543 Y-64.2148 346.5957 -59.4961 273.6211 Y-46.0625 268.9004 L-57 262.3301 L-58.0879 118.9434 -65.3047 108.9473 Y-32.793 89.4238 55.9648 101.7031 v66.9336 103.2207 66.1602 112.7578 Yf0 0.1 0.24 0.24 k66.1602 112.7578 m66.1602 127.3027 L60.1328 149.4727 L55.5977 254.7422 L58.5039 366.207 L37.4453 393.8008 18.9297 385.0879 v13.9551 382.748 5.59766 381.4863 -3.96094 380.8848 C-1.71875 318.1582 4.09766 155.2227 4.32031 148.0176 c4.59375 139.0859 4.82813 124.6367 21.0938 120.5703 c33.7578 117.4043 53.8145 111.1543 53.1934 101.3438 C54.123 101.4668 55.0215 101.5723 55.9648 101.7031 c66.9336 103.2207 66.1602 112.7578 Yf0 g70.1523 112.4961 m70.1719 112.7422 70.1602 113.1973 V70.1602 167.3555 L70.1602 168.6172 69.5625 169.8047 68.5547 170.5586 c67.8555 171.082 67.0117 171.3555 66.1602 171.3555 c65.7813 171.3555 65.3984 171.3008 65.0273 171.1914 C28.0273 160.2715 L26.3281 159.7695 25.1602 158.209 25.1602 156.4355 C25.1602 133.1855 L25.1602 131.0859 26.7852 129.3418 28.8789 129.1953 c46.2578 127.9746 55.2227 123.416 59.2891 118.9883 C59.5703 118.6816 59.8281 118.375 60.0664 118.0703 C66.2305 108.2207 63.7617 105.3926 63.8203 105.3926 C69.9688 110.4199 70.1523 112.4961 Vf0 0.07 0.19 0.29 k66.1602 167.3555 m66.1602 112.7578 l66 130.3945 29.1602 133.1855 v29.1602 156.4355 l66.1602 167.3555 lfu0 g63.416 129.0918 m61.4668 131.4336 57.5625 132.3945 54.7813 133.0195 c53.8672 133.2246 52.8887 133.0332 52.0645 132.5898 c51.7285 132.4082 50.7324 131.5469 51.6563 131.3398 c54.3027 130.7461 57.9492 129.9043 59.8008 127.6816 c60.5234 126.8145 64.209 128.1406 63.416 129.0918 c63.416 129.0918 lfUu64.4219 134.7109 m62.3828 137.1582 58.3398 138.125 55.4258 138.7793 c54.5391 138.9766 53.375 138.6309 52.6934 138.0469 c52.0645 137.5078 52.2715 136.9102 53.0449 136.7363 c55.5586 136.1738 59.0625 135.3379 60.8281 133.2188 c61.6523 132.2285 65.3594 133.584 64.4219 134.7109 c64.4219 134.7109 lfUu64.582 141.9043 m60.4805 144.1719 55.5664 145.1699 50.918 145.002 c49.9844 144.9688 48.998 144.7539 48.1875 144.2695 c47.5898 143.9121 47.6445 143.4668 48.3945 143.4941 c52.6758 143.6484 57.1602 142.7012 60.9336 140.6152 c61.8945 140.084 64.9844 141.6816 64.582 141.9043 c64.582 141.9043 lfUu-52.7637 121.5137 m-45.8652 121.3926 -38.9668 121.2715 -32.0684 121.1504 c-29.8418 121.1113 -29.125 123.9727 -31.7363 124.0176 c-38.6348 124.1387 -45.5332 124.2598 -52.4316 124.3809 c-54.6582 124.4199 -55.375 121.5586 -52.7637 121.5137 c-52.7637 121.5137 lfUu-49.4805 132.6406 m-46.8184 132.6406 -44.1563 132.6406 -41.4922 132.6406 c-40.5547 132.6406 -39.5547 132.8398 -38.7617 133.373 c-38.1758 133.7676 -38.2324 134.3125 -39.0117 134.3125 c-41.6758 134.3125 -44.3379 134.3125 -47 134.3125 c-47.9414 134.3125 -48.9414 134.1133 -49.7344 133.5801 c-50.3164 133.1855 -50.2617 132.6406 -49.4805 132.6406 c-49.4805 132.6406 lfUu-52.4238 146.291 m-49.8828 146.291 -47.3418 146.291 -44.8008 146.291 c-42.6426 146.291 -41.793 148.9824 -44.4219 148.9824 c-46.9609 148.9824 -49.5039 148.9824 -52.0449 148.9824 c-54.2031 148.9824 -55.0508 146.291 -52.4238 146.291 c-52.4238 146.291 lfU29.1602 129.1855 m28.582 129.1855 28 129.3105 27.4609 129.5645 c14.875 135.4668 14.3125 143.4551 13.6016 153.5684 C13.4336 155.9141 L12.6523 166.123 6.47656 366.5 6.47656 381.6035 c6.47656 381.9668 6.46875 382.3613 6.45898 382.7832 c6.11914 399.894 15.1484 421.1655 88.6016 433.8765 c88.8262 433.9155 89.0566 433.9351 89.2832 433.9351 c89.8066 433.9351 90.3262 433.8315 90.8125 433.6304 C98.5098 430.4468 L105.0215 435.8101 L105.5996 436.2827 106.2949 436.5874 107.0332 436.687 c145.3301 441.8179 195.0254 444.4194 254.7402 444.4194 C356.207 444.4194 L394.2383 444.4194 428.4355 443.3608 457.8496 441.2749 c459.0996 441.1851 460.2363 440.5171 460.9199 439.4644 C464.2051 434.4116 L466.8828 438.4897 L467.625 439.6226 468.8867 440.2944 470.2266 440.2944 c470.3379 440.2944 470.4512 440.2905 470.5664 440.2788 c479.2734 439.5386 487.5176 438.7085 495.0664 437.8101 c496.3555 437.6577 497.4922 436.8882 498.1113 435.7437 C499.6953 432.8198 L502.8027 435.4839 L503.5332 436.1089 504.457 436.4468 505.4063 436.4468 c505.5879 436.4468 505.7695 436.4351 505.9531 436.4097 c593.9922 424.2808 604.8594 401.3804 604.4883 382.7832 c604.4805 382.3613 604.4727 381.9668 604.4727 381.6035 c604.4727 366.4883 598.2949 166.1094 597.5156 155.9141 C597.3457 153.5742 L596.6348 143.457 596.0742 135.4668 583.4883 129.5645 c582.9473 129.3105 582.3672 129.1855 581.7891 129.1855 c580.9941 129.1855 580.2051 129.4219 579.5273 129.8867 c578.5352 130.5664 577.9121 131.6484 577.8047 132.8262 C577.2695 133.9707 569.1914 147.5391 488.7813 154.8809 c488.084 154.9453 487.416 155.1895 486.8457 155.5918 C476.8008 162.6504 L466.8066 157.2188 L466.2188 156.8984 465.5625 156.7324 464.8965 156.7324 c464.8105 156.7324 464.7246 156.7344 464.6406 156.7402 c434.7637 158.6621 399.498 159.6348 359.8223 159.6348 C251.627 159.6348 L248.9121 159.6348 243.5723 159.623 243.5684 159.623 c242.8652 159.623 242.1738 159.8086 241.5645 160.1621 C233.6504 164.7422 L227.3379 160.2324 L226.6699 159.7578 225.877 159.498 225.0566 159.4883 c202.2109 159.2266 180.8887 158.5977 161.6855 157.623 c161.6172 157.6191 161.5488 157.6172 161.4824 157.6172 c160.4961 157.6172 159.541 157.9805 158.8066 158.6445 C149.7676 166.7773 L143.373 157.9824 L142.6777 157.0273 141.5957 156.4277 140.416 156.3457 c42.9688 149.5098 33.7188 134.0469 33.1426 132.8242 C33.0352 131.6484 32.4121 130.5664 31.4199 129.8867 c30.7422 129.4219 29.9531 129.1855 29.1602 129.1855 C29.1602 129.1855 Lf0 0.04 0.12 0.03 k505.4063 432.4468 m498.5371 426.5601 L494.5938 433.8394 L487.0332 434.7378 478.9023 435.5562 470.2266 436.2944 C464.1895 427.0952 L457.5664 437.2847 L429.5957 439.269 396.1738 440.4194 356.207 440.4194 C254.7402 440.4194 L190.084 440.4194 142.5488 437.4097 107.5645 432.7222 C99.1973 425.8315 L89.2832 429.9351 L6.14648 415.5483 10.4766 390.4668 10.4766 381.6035 c10.4766 368.8867 16.5977 166.9902 17.4219 156.2188 c18.2695 145.1191 17.873 138.4785 29.1602 133.1855 C27.8223 152.457 140.1367 160.3359 V149.1426 172.7207 L161.4824 161.6172 L179.9629 162.5566 201.0059 163.2129 225.0117 163.4883 C233.4238 169.4961 L243.5684 163.623 L247.2324 163.6328 250.9512 163.6387 254.7402 163.6328 C356.207 163.6328 L400.6152 163.6973 436.25 162.5742 464.8965 160.7324 C477.0703 167.3496 L489.1445 158.8652 L582.9785 150.2969 581.7891 133.1855 Y593.0742 138.4785 592.6797 145.1191 593.5273 156.2188 c594.3516 166.9902 600.4727 368.8867 600.4727 381.6035 c600.4727 391.0098 605.3516 418.6772 505.4063 432.4468 Cf0 0 0 0 k88.6016 419.0562 m88.8262 419.0952 89.0566 419.1147 89.2832 419.1147 c89.8066 419.1147 90.3262 419.0132 90.8125 418.812 C98.5098 415.6265 L105.0215 420.9917 L105.5996 421.4663 106.2949 421.769 107.0332 421.8687 c145.3301 426.9995 195.0254 429.6011 254.7402 429.6011 C356.207 429.6011 L394.2383 429.6011 428.4355 428.5425 457.8496 426.4565 c459.0996 426.3687 460.2363 425.6968 460.9199 424.646 C464.2051 419.5913 L466.8828 423.6694 L467.625 424.8022 468.8867 425.4761 470.2266 425.4761 c470.3379 425.4761 470.4512 425.4702 470.5664 425.4624 c479.2734 424.7202 487.5176 423.8901 495.0664 422.9937 c496.3555 422.8394 497.4922 422.0679 498.1113 420.9272 C499.6953 418.0015 L502.8027 420.6655 L503.5332 421.2905 504.457 421.6284 505.4063 421.6284 c505.5879 421.6284 505.7695 421.6147 505.9531 421.5913 c568.8516 412.9272 592.3496 398.7632 600.5098 384.5996 C600.4922 395.9272 596.2637 419.9312 505.4063 432.4468 C498.5371 426.5601 L494.5938 433.8394 L487.0332 434.7378 478.9023 435.5562 470.2266 436.2944 C464.1895 427.0952 L457.5664 437.2847 L429.5957 439.269 396.1738 440.4194 356.207 440.4194 C254.7402 440.4194 L190.084 440.4194 142.5488 437.4097 107.5645 432.7222 C99.1973 425.8315 L89.2832 429.9351 L14.1797 416.939 10.457 395.2163 10.4375 384.6035 C17.8164 397.3765 37.793 410.2671 88.6016 419.0562 cfu0 g664.3477 123.8613 m657.4492 123.7402 650.5508 123.6191 643.6523 123.498 c642.4512 123.4785 639.4629 121.623 642.0508 121.6699 c648.9492 121.791 655.8477 121.9121 662.7461 122.0332 c663.9473 122.0527 666.9355 123.9082 664.3477 123.8613 c664.3477 123.8613 lfUu659.9941 134.3711 m657.332 134.3711 654.6699 134.3711 652.0059 134.3711 c651.1738 134.3711 650.0117 134.0391 649.4336 133.4004 c648.8203 132.7188 649.9648 132.582 650.3965 132.582 c653.0586 132.582 655.7207 132.582 658.3848 132.582 c659.2168 132.582 660.3789 132.9141 660.957 133.5527 c661.5703 134.2344 660.4258 134.3711 659.9941 134.3711 c659.9941 134.3711 lfUu663.9004 148.8613 m661.3594 148.8613 658.8164 148.8613 656.2754 148.8613 c655.373 148.8613 654.2363 148.5996 653.7402 147.7539 c653.2813 146.9707 654.127 146.4121 654.8418 146.4121 c657.3828 146.4121 659.9258 146.4121 662.4668 146.4121 c663.3691 146.4121 664.5059 146.6738 665.002 147.5195 c665.4609 148.3027 664.6152 148.8613 663.9004 148.8613 c663.9004 148.8613 lfUu591.7813 377.123 m588.6152 378.6738 584.8418 379.2598 581.3809 379.6035 c580.4512 379.6973 579.3906 379.459 578.6484 378.873 c578.0566 378.4043 578.1641 377.7734 578.9629 377.6934 c582.2188 377.3691 585.6953 376.8457 588.6719 375.3887 c589.6758 374.8945 593.2441 376.4043 591.7813 377.123 c591.7813 377.123 lfUu591.6367 367.1563 m588.3008 368.793 584.4297 369.4277 580.7715 369.791 c579.0332 369.9648 576.7559 367.4766 579.373 367.2168 c582.3672 366.918 586.1934 366.2539 588.6211 365.0625 c589.498 364.6328 590.584 364.791 591.3789 365.3438 c591.9297 365.7266 592.5078 366.7285 591.6367 367.1563 c591.6367 367.1563 lfUu591.6836 354.2715 m588.4277 355.8691 584.623 356.4355 581.0605 356.791 c580.1816 356.8789 579.0664 356.5176 578.3281 356.0586 c577.666 355.6484 577.8516 355.3008 578.5488 355.2324 c581.707 354.918 585.1563 354.3789 588.043 352.9629 c588.7578 352.6113 589.834 352.9414 590.5273 353.1914 c590.6406 353.2305 592.3105 353.9648 591.6836 354.2715 c591.6836 354.2715 lfUu593.1621 386.2871 m587.4473 388.5332 581.2266 389.8301 575.084 389.748 c572.9863 389.7168 572.0254 387.1621 574.666 387.1973 c580.1523 387.2734 585.7832 385.8906 590.877 383.8887 c592.3359 383.3145 595.3965 385.4082 593.1621 386.2871 c593.1621 386.2871 lfUu588.582 342.9141 m586.3809 343.4609 584.127 343.8809 581.8652 344.0508 c580.918 344.123 579.7793 343.7891 579.3574 342.8438 c578.9727 341.9863 579.7012 341.1895 580.5605 341.125 c582.8223 340.9551 585.0762 340.5332 587.2773 339.9883 c589.2441 339.5 591.1172 342.2871 588.582 342.9141 c588.582 342.9141 lfUu570.9844 157.7012 m548.9824 164.7285 525.4023 168.0645 502.3984 168.8379 c500.6465 168.8945 498.3965 166.291 501.0156 166.2012 c523.7578 165.4375 546.9727 162.1836 568.7148 155.2402 c570.248 154.75 573.2754 156.9688 570.9844 157.7012 c570.9844 157.7012 lfUu21.5117 375.3574 m24.2734 376.7129 27.5215 377.1777 30.541 377.4785 c32.5117 377.6738 33.6797 380.0879 31.0137 379.8203 c27.3125 379.4512 23.3125 378.8086 19.9297 377.1504 c17.5313 375.9746 19.7207 374.4805 21.5117 375.3574 c21.5117 375.3574 lfUu21.9922 365.6289 m21.1563 365.2188 21.9863 365.6133 22.168 365.6895 c22.7266 365.9238 23.2969 366.1152 23.875 366.293 c26.0586 366.9648 28.3145 367.3125 30.584 367.5391 c32.3828 367.7188 33.8613 369.7363 31.168 369.4688 c27.2656 369.0801 23.1973 368.332 19.6445 366.5898 c19.1523 366.3477 18.4434 365.5645 19.2676 365.2285 c20.1367 364.875 21.207 365.2441 21.9922 365.6289 c21.9922 365.6289 lfUu21.8398 352.8555 m24.6055 354.2109 27.8477 354.6719 30.8711 354.9746 c32.7305 355.1602 34.0977 357.3164 31.4141 357.0488 c27.7188 356.6816 23.707 356.0352 20.332 354.3789 c17.918 353.1953 20.1484 352.0254 21.8398 352.8555 c21.8398 352.8555 lfUu19.6211 384.5488 m24.4082 386.4297 29.6895 387.6816 34.8398 387.6113 c35.7461 387.5996 39.2813 389.3066 37.3086 389.334 c30.8281 389.4238 24.2578 387.9941 18.2344 385.625 c15.6836 384.623 18.0801 383.9434 19.6211 384.5488 c19.6211 384.5488 lfUu23.2969 340.4121 m25.3281 340.916 27.4023 341.291 29.4902 341.4473 c30.2363 341.5039 31.4922 341.9629 31.6719 342.8105 c31.8652 343.7129 30.5313 343.7695 29.9805 343.7285 c27.543 343.5449 25.1094 343.0781 22.7383 342.4902 c22.1445 342.3438 20.8633 341.7637 21.0859 340.9336 c21.3125 340.0879 22.7012 340.2637 23.2969 340.4121 c23.2969 340.4121 lfUu41.3418 155.5645 m62.8906 162.4473 85.9395 165.7188 108.4746 166.4766 c109.834 166.5215 112.6055 168.6504 110.0059 168.5625 c86.7949 167.7832 63.0508 164.4648 40.8555 157.377 c38.6016 156.6582 39.0488 154.832 41.3418 155.5645 c41.3418 155.5645 lfUu-46.3887 108.8223 m-13.168 102.3398 22.1563 102.9277 55.5469 107.2832 c57.4297 107.5273 58.7383 109.8105 56.0645 109.4629 c23.3281 105.1914 -11.4414 104.5918 -44.0313 110.9512 c-45.2813 111.1934 -48.5977 109.252 -46.3887 108.8223 c-46.3887 108.8223 lfUu664.0918 108.8223 m630.8711 102.3398 595.5488 102.9277 562.1563 107.2832 c560.2754 107.5273 558.9648 109.8105 561.6387 109.4629 c594.377 105.1914 629.1445 104.5918 661.7344 110.9512 c662.9863 111.1934 666.2988 109.252 664.0918 108.8223 c664.0918 108.8223 lfUUuu503.4121 419.5425 m504.5527 419.4858 508.0293 419.3218 510.877 421.7437 c514.5215 424.8354 515.7656 430.9858 515.1758 442.9663 c514.6777 453.2339 508.0176 455.8022 502.5156 456.1499 C502.1113 456.1733 L495.8027 456.4761 491.9648 454.4038 489.8535 452.6108 c484.7207 448.2476 484.8945 441.7319 484.9297 441.0015 c485.0332 438.9819 486.916 437.3413 489.2617 437.228 C489.6445 437.2124 L489.9512 432.2007 491.6309 426.6655 495.1719 423.1753 c497.4316 420.9468 500.2813 419.6929 503.4121 419.5425 C503.4121 419.5425 Lf0 0.6 0.79 0.32 k489.4473 441.1147 m488.8457 453.1069 502.25 452.271 v508.6172 451.8687 510.4082 447.9468 510.6543 442.8569 c511.5215 425.2944 508.0527 423.2144 503.5977 423.4272 c496.4629 423.769 493.5254 433.6655 494.209 440.8882 c489.4473 441.1147 lf/BBAccumRotation (1.522997) XT0 g488.3066 417.0913 m491.4043 416.9429 493.8613 417.6694 495.8125 419.312 c499.748 422.6304 501.123 429.6519 500.5566 443.5483 c500.1797 452.7358 495.7793 457.6597 487.4668 458.1812 C487.0449 458.2065 L482.0645 458.4448 477.7891 457.1812 474.6758 454.5562 c468.9453 449.7261 469.0938 442.1206 469.127 441.269 c469.2129 439.2358 471.1035 437.5796 473.4629 437.4663 C474.043 437.439 L474.252 431.4155 476.0703 424.6968 480.123 420.7163 c482.3867 418.4917 485.2168 417.2378 488.3066 417.0913 C488.3066 417.0913 Lf0 0.6 0.79 0.32 k473.6484 441.353 m473.0684 455.2085 487.2051 454.3003 v493.9277 453.8765 495.7949 449.353 496.0371 443.4663 c496.8613 423.1851 493.2012 420.7515 488.4941 420.978 c480.9512 421.3374 477.8965 432.7671 478.6582 441.1147 c473.6484 441.353 lf/BBAccumRotation (1.522997) XT0 g470.4434 419.5327 m471.6211 419.478 475.2012 419.3062 478.1289 421.7886 c481.9199 425.0054 483.2148 431.4468 482.6035 444.0249 c482.0723 454.6929 475.1738 457.3647 469.4727 457.7319 C469.0566 457.7554 L462.4863 458.0718 458.4941 455.9175 456.3066 454.0562 c450.9629 449.5132 451.1465 442.7319 451.1797 441.9702 c451.2852 439.9507 453.168 438.3101 455.5176 438.1987 C456.1387 438.1694 L456.6035 429.0327 461.1152 419.978 470.4434 419.5327 C470.4434 419.5327 Lf0 0.6 0.79 0.32 k478.084 443.9194 m477.8145 449.2866 475.9277 453.4194 469.2031 453.8491 c455.0684 454.728 455.7012 442.0854 Y458.3301 441.9585 L459.457 445.0093 462.2441 446.0581 Y460.8203 444.9351 460.6484 439.7788 460.625 439.2905 C460.7285 432.0776 463.9082 423.7397 470.627 423.4194 c475.334 423.1929 478.9863 425.3921 478.084 443.9194 cf/BBAccumRotation (1.522997) XTUu0 g107.7344 419.5425 m106.5918 419.4858 103.1172 419.3218 100.2676 421.7437 c96.623 424.8354 95.3809 430.9858 95.9707 442.9663 c96.4688 453.2339 103.127 455.8022 108.6309 456.1499 C109.0352 456.1733 L115.3418 456.4761 119.1816 454.4038 121.291 452.6108 c126.4258 448.2476 126.252 441.7319 126.2168 441.0015 c126.1133 438.9819 124.2305 437.3413 121.8848 437.228 C121.502 437.2124 L121.1953 432.2007 119.5137 426.6655 115.9746 423.1753 c113.7129 420.9468 110.8652 419.6929 107.7344 419.5425 C107.7344 419.5425 Lf0 0.6 0.79 0.32 k121.6973 441.1147 m122.3008 453.1069 108.8965 452.271 v102.5293 451.8687 100.7363 447.9468 100.4902 442.8569 c99.623 425.2944 103.0918 423.2144 107.5488 423.4272 c114.6816 423.769 117.6211 433.6655 116.9355 440.8882 c121.6973 441.1147 lf/BBAccumRotation (1.522997) XT0 g122.8379 417.0913 m119.7402 416.9429 117.2832 417.6694 115.334 419.312 c111.3965 422.6304 110.0215 429.6519 110.5898 443.5483 c110.9668 452.7358 115.3652 457.6597 123.6777 458.1812 C124.1016 458.2065 L129.0801 458.4448 133.3574 457.1812 136.4707 454.5562 c142.2012 449.7261 142.0527 442.1206 142.0176 441.269 c141.9316 439.2358 140.043 437.5796 137.6816 437.4663 C137.1035 437.439 L136.8945 431.4155 135.0762 424.6968 131.0215 420.7163 c128.7598 418.4917 125.9277 417.2378 122.8379 417.0913 C122.8379 417.0913 Lf0 0.6 0.79 0.32 k137.498 441.353 m138.0762 455.2085 123.9395 454.3003 v117.2168 453.8765 115.3516 449.353 115.1094 443.4663 c114.2832 423.1851 117.9453 420.7515 122.6523 420.978 c130.1934 421.3374 133.25 432.7671 132.4863 441.1147 c137.498 441.353 lf/BBAccumRotation (1.522997) XT0 g140.7031 419.5327 m139.5254 419.478 135.9434 419.3062 133.0176 421.7886 c129.2246 425.0054 127.9316 431.4468 128.543 444.0249 c129.0723 454.6929 135.9727 457.3647 141.6738 457.7319 C142.0879 457.7554 L148.6602 458.0718 152.6504 455.9175 154.8398 454.0562 c160.1816 449.5132 160 442.7319 159.9668 441.9702 c159.8613 439.9507 157.9785 438.3101 155.6289 438.1987 C155.0078 438.1694 L154.541 429.0327 150.0293 419.978 140.7031 419.5327 C140.7031 419.5327 Lf0 0.6 0.79 0.32 k133.0605 443.9194 m133.3301 449.2866 135.2188 453.4194 141.9434 453.8491 c156.0781 454.728 155.4434 442.0854 Y152.8145 441.9585 L151.6895 445.0093 148.9023 446.0581 Y150.3262 444.9351 150.498 439.7788 150.5215 439.2905 C150.416 432.0776 147.2363 423.7397 140.5176 423.4194 c135.8105 423.1929 132.1582 425.3921 133.0605 443.9194 cf/BBAccumRotation (1.522997) XTUUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF